{"ast":null,"code":"var _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/search/Home.js\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport colors from \"../../config/colors\";\nimport AppButton from \"../../componets/AppButton\";\nimport Screen from \"../../componets/Screen\";\nimport { readAuthUser } from \"../../../apis/auth\";\nimport { dbReadSneakers } from \"../../../apis/database/sneakers\";\nimport { dbReadUserInfo } from \"../../../apis/database/userInfo\";\nimport { dbReadUserSneakers } from \"../../../apis/database/userSneakers\";\n\nfunction Home(_ref) {\n  var dispatch = _ref.dispatch,\n      navigation = _ref.navigation,\n      authUser = _ref.authUser;\n  useEffect(function () {\n    dispatch(readAuthUser());\n    dispatch(dbReadSneakers());\n  }, []);\n  useEffect(function () {\n    if (authUser.id) {\n      dispatch(dbReadUserSneakers(authUser.id));\n      dispatch(dbReadUserInfo(authUser.id));\n    }\n  }, [authUser]);\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../../../assets/homePhoto.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(AppButton, {\n    title: \"Search\",\n    onPress: function onPress() {\n      return navigation.navigate('Search');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    sneakers: globalState.sneakers,\n    authUser: globalState.authUser\n  };\n}\n\nexport default connect(mapStateToProps)(Home);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white\n  },\n  image: {\n    flex: .4,\n    width: \"100%\",\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/search/Home.js"],"names":["React","useEffect","connect","colors","AppButton","Screen","readAuthUser","dbReadSneakers","dbReadUserInfo","dbReadUserSneakers","Home","dispatch","navigation","authUser","id","styles","container","image","require","navigate","mapStateToProps","globalState","sneakers","StyleSheet","create","backgroundColor","white","flex","width","resizeMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;AACA,SAASC,cAAT;AACA,SAASC,cAAT;AACA,SAASC,kBAAT;;AAEA,SAASC,IAAT,OAAkD;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAEhDZ,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAAEL,YAAY,EAAd,CAAR;AACAK,IAAAA,QAAQ,CAAEJ,cAAc,EAAhB,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAKY,QAAQ,CAACC,EAAd,EAAmB;AACjBH,MAAAA,QAAQ,CAAEF,kBAAkB,CAAEI,QAAQ,CAACC,EAAX,CAApB,CAAR;AACAH,MAAAA,QAAQ,CAAEH,cAAc,CAAEK,QAAQ,CAACC,EAAX,CAAhB,CAAR;AACD;AACF,GALQ,EAKN,CAAED,QAAF,CALM,CAAT;AAOA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEE,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAA4B,IAAA,MAAM,EAAEC,OAAO,iCAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACO,QAAX,CAAoB,QAApB,CAAN;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAMD;;AAED,SAASC,eAAT,CAA0BC,WAA1B,EAAuC;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAED,WAAW,CAACC,QADjB;AAELT,IAAAA,QAAQ,EAAEQ,WAAW,CAACR;AAFjB,GAAP;AAID;;AAED,eAAeX,OAAO,CAACkB,eAAD,CAAP,CAAyBV,IAAzB,CAAf;AAEA,IAAMK,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAE/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,eAAe,EAAEtB,MAAM,CAACuB;AADf,GAFoB;AAM/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,UAAU,EAAE;AAHP;AANwB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { StyleSheet, Image} from \"react-native\"\nimport { connect } from \"react-redux\"\n\nimport colors from \"../../config/colors\"\nimport AppButton from \"../../componets/AppButton\"\nimport Screen from \"../../componets/Screen\"\nimport { readAuthUser } from \"../../../apis/auth\"\nimport { dbReadSneakers } from \"../../../apis/database/sneakers\"\nimport { dbReadUserInfo } from \"../../../apis/database/userInfo\"\nimport { dbReadUserSneakers } from \"../../../apis/database/userSneakers\"\n\nfunction Home({ dispatch, navigation, authUser }) {\n\n  useEffect(() => { \n    dispatch( readAuthUser() )\n    dispatch( dbReadSneakers() )\n  }, [])\n\n  useEffect(() => {\n    if ( authUser.id ) {\n      dispatch( dbReadUserSneakers( authUser.id ))\n      dispatch( dbReadUserInfo( authUser.id ) )\n    }\n  }, [ authUser ])\n\n  return (\n    <Screen style={styles.container} >\n      <Image style={styles.image} source={require(\"../../../assets/homePhoto.jpg\")}/>\n        <AppButton title=\"Search\" onPress={() => navigation.navigate('Search')} />\n    </Screen>\n  )\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    sneakers: globalState.sneakers,\n    authUser: globalState.authUser\n  }\n}\n\nexport default connect(mapStateToProps)(Home)\n\nconst styles = StyleSheet.create({\n  \n  container: {\n    backgroundColor: colors.white,\n  },\n  \n  image: {\n    flex: .4,\n    width: \"100%\",\n    resizeMode: \"contain\",\n    },\n\n})"]},"metadata":{},"sourceType":"module"}