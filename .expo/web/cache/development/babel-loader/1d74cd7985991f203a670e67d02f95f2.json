{"ast":null,"code":"import { API, graphqlOperation } from \"aws-amplify\";\nimport { setUserConversations } from \"../../actions/index\";\nimport * as queries from \"../../src/graphql/queries\";\nexport function dbCreateConversation(subject, user_ids) {\n  var conversationDetails = {\n    subject: subject,\n    user_ids: user_ids,\n    Messages: []\n  };\n  return API.graphql(graphqlOperation(mutations.dbCreateConversation, {\n    input: conversationDetails\n  })).then(function (result) {\n    return console.log(result);\n  }).catch(function (error) {\n    return console.log('❌ Error Adding Conversation ', error);\n  });\n}\nexport function dbReadUserConversations(user_id) {\n  var filter = {\n    user_ids: {\n      contains: user_id\n    }\n  };\n  return function (dispatch) {\n    return API.graphql({\n      query: queries.listConversations,\n      variables: {\n        filter: filter\n      }\n    }).then(function (conversations) {\n      console.log(conversations.data.listConversations.items);\n      return null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}\nexport function dbUpdateConversation(Messages) {\n  var conversationDetails = {\n    Messages: Messages\n  };\n  return function (dispatch) {\n    return API.graphql(graphqlOperation(mutations.updateConversation, {\n      input: conversationDetails\n    })).then(function (conversation) {\n      console.log(conversation);\n      return null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/apis/database/conversation.js"],"names":["API","graphqlOperation","setUserConversations","queries","dbCreateConversation","subject","user_ids","conversationDetails","Messages","graphql","mutations","input","then","result","console","log","catch","error","dbReadUserConversations","user_id","filter","contains","dispatch","query","listConversations","variables","conversations","data","items","err","dbUpdateConversation","updateConversation","conversation"],"mappings":"AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AAEA,SAASC,oBAAT;AACA,OAAO,KAAKC,OAAZ;AAGA,OAAO,SAASC,oBAAT,CAA+BC,OAA/B,EAAwCC,QAAxC,EAAmD;AACtD,MAAMC,mBAAmB,GAAG;AACxBF,IAAAA,OAAO,EAAEA,OADe;AAExBC,IAAAA,QAAQ,EAAEA,QAFc;AAGxBE,IAAAA,QAAQ,EAAE;AAHc,GAA5B;AAMA,SAAOR,GAAG,CACLS,OADE,CACOR,gBAAgB,CAAES,SAAS,CAACN,oBAAZ,EAAkC;AAAEO,IAAAA,KAAK,EAAEJ;AAAT,GAAlC,CADvB,EAEFK,IAFE,CAEI,UAAAC,MAAM;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAaF,MAAb,CAAJ;AAAA,GAFV,EAGFG,KAHE,CAGK,UAAAC,KAAK;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,KAA5C,CAAJ;AAAA,GAHV,CAAP;AAIH;AAGD,OAAO,SAASC,uBAAT,CAAmCC,OAAnC,EAA6C;AAChD,MAAMC,MAAM,GAAG;AAACd,IAAAA,QAAQ,EAAE;AAACe,MAAAA,QAAQ,EAAEF;AAAX;AAAX,GAAf;AACA,SAAO,UAAAG,QAAQ,EAAI;AACf,WAAOtB,GAAG,CACLS,OADE,CACO;AAAEc,MAAAA,KAAK,EAAEpB,OAAO,CAACqB,iBAAjB;AAAoCC,MAAAA,SAAS,EAAE;AAAEL,QAAAA,MAAM,EAAEA;AAAV;AAA/C,KADP,EAEFR,IAFE,CAEI,UAAAc,aAAa,EAAI;AACpBZ,MAAAA,OAAO,CAACC,GAAR,CAAaW,aAAa,CAACC,IAAd,CAAmBH,iBAAnB,CAAqCI,KAAlD;AAEA,aAAO,IAAP;AACH,KANE,EAOFZ,KAPE,CAOK,UAAAa,GAAG;AAAA,aAAIf,OAAO,CAACC,GAAR,CAAac,GAAb,CAAJ;AAAA,KAPR,CAAP;AAQH,GATD;AAUH;AAGD,OAAO,SAASC,oBAAT,CAAgCtB,QAAhC,EAA2C;AAC9C,MAAMD,mBAAmB,GAAG;AACxBC,IAAAA,QAAQ,EAAEA;AADc,GAA5B;AAIA,SAAO,UAAAc,QAAQ,EAAI;AACf,WAAOtB,GAAG,CACLS,OADE,CACOR,gBAAgB,CAAES,SAAS,CAACqB,kBAAZ,EAAgC;AAAEpB,MAAAA,KAAK,EAAEJ;AAAT,KAAhC,CADvB,EAEFK,IAFE,CAEI,UAAAoB,YAAY,EAAI;AACnBlB,MAAAA,OAAO,CAACC,GAAR,CAAaiB,YAAb;AACA,aAAO,IAAP;AACH,KALE,EAMFhB,KANE,CAMK,UAAAa,GAAG;AAAA,aAAIf,OAAO,CAACC,GAAR,CAAac,GAAb,CAAJ;AAAA,KANR,CAAP;AAOH,GARD;AASH","sourcesContent":["import { API, graphqlOperation } from \"aws-amplify\"\n\nimport { setUserConversations } from '../../actions/index'\nimport * as queries from \"../../src/graphql/queries\"\n\n//-----CREATE-----//\nexport function dbCreateConversation( subject, user_ids ) {\n    const conversationDetails = {\n        subject: subject,\n        user_ids: user_ids,\n        Messages: []\n    }\n \n    return API\n        .graphql( graphqlOperation( mutations.dbCreateConversation, { input: conversationDetails }))\n        .then( result => console.log( result ))\n        .catch( error => console.log('❌ Error Adding Conversation ', error ))  \n}\n\n//-----READ-----//\nexport function dbReadUserConversations ( user_id ) {\n    const filter = {user_ids: {contains: user_id}}\n    return dispatch => {\n        return API\n            .graphql( { query: queries.listConversations, variables: { filter: filter }} )\n            .then( conversations => {\n                console.log( conversations.data.listConversations.items )\n                // dispatch( setUserConversations( conversations.data.listConversations.items ))\n                return null\n            })\n            .catch( err => console.log( err ))\n    }\n}\n\n//-----UPDATE-----//\nexport function dbUpdateConversation ( Messages ) {\n    const conversationDetails = {\n        Messages: Messages\n    }\n\n    return dispatch => {\n        return API\n            .graphql( graphqlOperation( mutations.updateConversation, { input: conversationDetails }))\n            .then( conversation => {\n                console.log( conversation )\n                return null\n            })\n            .catch( err => console.log( err ))\n    }\n}\n\n//-----DELETE-----//"]},"metadata":{},"sourceType":"module"}