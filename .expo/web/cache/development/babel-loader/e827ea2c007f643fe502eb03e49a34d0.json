{"ast":null,"code":"import { API, graphqlOperation } from \"aws-amplify\";\nimport { setUserInfo, updateUserInfoImage } from \"../../actions/index\";\nimport * as mutations from \"../../src/graphql/mutations\";\nimport * as queries from \"../../src/graphql/queries\";\nexport function dbCreateUserInfo(user_id, image) {\n  var userInfoDetails = {\n    user_id: user_id,\n    image: image,\n    conversation_ids: []\n  };\n  return API.graphql(graphqlOperation(mutations.createUserInfo, {\n    input: userInfoDetails\n  })).then(function (result) {\n    return console.log(result);\n  }).catch(function (error) {\n    return console.log('❌ Error Adding User Info ', error);\n  });\n}\nexport function dbReadUserInfo(user_id) {\n  var filter = {\n    user_id: {\n      eq: user_id\n    }\n  };\n  return function (dispatch) {\n    return API.graphql({\n      query: queries.listUserInfos,\n      variables: {\n        filter: filter\n      }\n    }).then(function (userInfo) {\n      dispatch(setUserInfo(userInfo.data.listUserInfos.items[0]));\n      return null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/apis/database/userInfo.js"],"names":["API","graphqlOperation","setUserInfo","updateUserInfoImage","mutations","queries","dbCreateUserInfo","user_id","image","userInfoDetails","conversation_ids","graphql","createUserInfo","input","then","result","console","log","catch","error","dbReadUserInfo","filter","eq","dispatch","query","listUserInfos","variables","userInfo","data","items","err"],"mappings":"AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AAEA,SAASC,WAAT,EAAsBC,mBAAtB;AACA,OAAO,KAAKC,SAAZ;AACA,OAAO,KAAKC,OAAZ;AAGA,OAAO,SAASC,gBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA4C;AAC/C,MAAMC,eAAe,GAAG;AACpBF,IAAAA,OAAO,EAAEA,OADW;AAEpBC,IAAAA,KAAK,EAAEA,KAFa;AAGpBE,IAAAA,gBAAgB,EAAE;AAHE,GAAxB;AAMA,SAAOV,GAAG,CACLW,OADE,CACOV,gBAAgB,CAAEG,SAAS,CAACQ,cAAZ,EAA4B;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAA5B,CADvB,EAEFK,IAFE,CAEI,UAAAC,MAAM;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAaF,MAAb,CAAJ;AAAA,GAFV,EAGFG,KAHE,CAGK,UAAAC,KAAK;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC,CAAJ;AAAA,GAHV,CAAP;AAIH;AAGD,OAAO,SAASC,cAAT,CAA0Bb,OAA1B,EAAoC;AACvC,MAAMc,MAAM,GAAG;AAAEd,IAAAA,OAAO,EAAE;AAAEe,MAAAA,EAAE,EAACf;AAAL;AAAX,GAAf;AACA,SAAO,UAAAgB,QAAQ,EAAI;AACf,WAAOvB,GAAG,CACLW,OADE,CACO;AAAEa,MAAAA,KAAK,EAAEnB,OAAO,CAACoB,aAAjB;AAAgCC,MAAAA,SAAS,EAAE;AAAEL,QAAAA,MAAM,EAAEA;AAAV;AAA3C,KADP,EAEFP,IAFE,CAEI,UAAAa,QAAQ,EAAI;AACfJ,MAAAA,QAAQ,CAAErB,WAAW,CAAEyB,QAAQ,CAACC,IAAT,CAAcH,aAAd,CAA4BI,KAA5B,CAAkC,CAAlC,CAAF,CAAb,CAAR;AACA,aAAO,IAAP;AACH,KALE,EAMFX,KANE,CAMK,UAAAY,GAAG;AAAA,aAAId,OAAO,CAACC,GAAR,CAAaa,GAAb,CAAJ;AAAA,KANR,CAAP;AAOH,GARD;AASH","sourcesContent":["import { API, graphqlOperation } from \"aws-amplify\"\n\nimport { setUserInfo, updateUserInfoImage } from '../../actions/index'\nimport * as mutations from '../../src/graphql/mutations'\nimport * as queries from \"../../src/graphql/queries\"\n\n//-----CREATE-----//\nexport function dbCreateUserInfo( user_id, image ) {\n    const userInfoDetails = {\n        user_id: user_id,\n        image: image,\n        conversation_ids: []\n    }\n \n    return API\n        .graphql( graphqlOperation( mutations.createUserInfo, { input: userInfoDetails }))\n        .then( result => console.log( result ))\n        .catch( error => console.log('❌ Error Adding User Info ', error ))  \n}\n\n//-----READ-----//\nexport function dbReadUserInfo ( user_id ) {\n    const filter = { user_id: { eq:user_id }}\n    return dispatch => {\n        return API\n            .graphql( { query: queries.listUserInfos, variables: { filter: filter }})\n            .then( userInfo => {\n                dispatch( setUserInfo( userInfo.data.listUserInfos.items[0] ))\n                return null\n            })\n            .catch( err => console.log( err ))\n    }\n}\n\n//-----UPDATE-----//\n// export function dbUpdateUserInfo ( link, userInfo ) {\n//     const newUserInfo = {\n//         id: userInfo.id,\n//         image: link,\n//         _version: userInfo._version\n//     }\n\n//     return dispatch => {\n//         return API\n//             .graphql( graphqlOperation( mutations.updateUserInfo, { input: newUserInfo }))\n//             .then( userInfo => {\n//                 dispatch( updateUserInfoImage( userInfo.data.updateUserInfo.image ))\n//                 return null\n//             })\n//             .catch( err => console.log( err ))\n//     }\n// }\n\n//-----DELETE-----//"]},"metadata":{},"sourceType":"module"}