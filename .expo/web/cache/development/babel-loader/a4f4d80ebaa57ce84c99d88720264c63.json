{"ast":null,"code":"import { Auth } from 'aws-amplify';\nimport { updateUser, setUser } from \"../actions/index\";\nexport function authSignUp(username, password, preferred_username, picture, navigation) {\n  Auth.signUp({\n    username: username,\n    password: password,\n    attributes: {\n      preferred_username: preferred_username,\n      picture: picture\n    }\n  }).then(navigation.navigate('ConfirmSignUp')).catch(function (err) {\n    return console.log('❌ Error Signing Up', err);\n  });\n}\nexport function fetchAuthUser() {\n  return function (dispatch) {\n    return Auth.currentAuthenticatedUser({\n      bypassCache: false\n    }).then(function (user) {\n      dispatch(setUser({\n        id: user.attributes.sub,\n        email: user.attributes.email,\n        username: user.attributes.preferred_username,\n        picture: user.attributes.picture\n      }));\n      return null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}\nexport function updatePreferred_username(payload, dispatch, navigation) {\n  Auth.currentAuthenticatedUser().then(function (user) {\n    return Auth.updateUserAttributes(user, {\n      \"preferred_username\": payload\n    });\n  }).then(function (response) {\n    return alert(response);\n  }).then(dispatch(updateUser(payload))).catch(function (err) {\n    return alert(err.message);\n  });\n}\nexport function updatePassword(oldPassword, newPassword) {\n  Auth.currentAuthenticatedUser().then(function (user) {\n    return Auth.changePassword(user, oldPassword, newPassword);\n  }).then(function (response) {\n    return alert(response);\n  }).catch(function (err) {\n    return alert(err.message);\n  });\n}","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/apis/auth.js"],"names":["Auth","updateUser","setUser","authSignUp","username","password","preferred_username","picture","navigation","signUp","attributes","then","navigate","catch","err","console","log","fetchAuthUser","dispatch","currentAuthenticatedUser","bypassCache","user","id","sub","email","updatePreferred_username","payload","updateUserAttributes","response","alert","message","updatePassword","oldPassword","newPassword","changePassword"],"mappings":"AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,EAAqBC,OAArB;AAGA,OAAO,SAASC,UAAT,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,kBAAzC,EAA6DC,OAA7D,EAAsEC,UAAtE,EAAmF;AACtFR,EAAAA,IAAI,CAACS,MAAL,CAAY;AAAEL,IAAAA,QAAQ,EAARA,QAAF;AAAYC,IAAAA,QAAQ,EAARA,QAAZ;AAAsBK,IAAAA,UAAU,EAAE;AAAEJ,MAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBC,MAAAA,OAAO,EAAPA;AAAtB;AAAlC,GAAZ,EACKI,IADL,CACWH,UAAU,CAACI,QAAX,CAAqB,eAArB,CADX,EAEKC,KAFL,CAEY,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAa,oBAAb,EAAoCF,GAApC,CAAJ;AAAA,GAFf;AAGH;AAGD,OAAO,SAASG,aAAT,GAA0B;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACf,WAAOlB,IAAI,CACNmB,wBADE,CACuB;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADvB,EAEFT,IAFE,CAEG,UAAAU,IAAI,EAAI;AAAEH,MAAAA,QAAQ,CAAEhB,OAAO,CAAC;AAC9BoB,QAAAA,EAAE,EAACD,IAAI,CAACX,UAAL,CAAgBa,GADW;AAE9BC,QAAAA,KAAK,EAAEH,IAAI,CAACX,UAAL,CAAgBc,KAFO;AAG9BpB,QAAAA,QAAQ,EAAEiB,IAAI,CAACX,UAAL,CAAgBJ,kBAHI;AAI9BC,QAAAA,OAAO,EAAEc,IAAI,CAACX,UAAL,CAAgBH;AAJK,OAAD,CAAT,CAAR;AAMhB,aAAO,IAAP;AACC,KATE,EAUFM,KAVE,CAUK,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAVR,CAAP;AAWL,GAZC;AAaH;AAMD,OAAO,SAASW,wBAAT,CAAmCC,OAAnC,EAA4CR,QAA5C,EAAsDV,UAAtD,EAAmE;AACxER,EAAAA,IAAI,CAACmB,wBAAL,GACGR,IADH,CACS,UAAAU,IAAI,EAAI;AAAE,WAAOrB,IAAI,CAAC2B,oBAAL,CAA2BN,IAA3B,EAAiC;AAAE,4BAAsBK;AAAxB,KAAjC,CAAP;AAA2E,GAD9F,EAEGf,IAFH,CAES,UAAAiB,QAAQ;AAAA,WAAIC,KAAK,CAAED,QAAF,CAAT;AAAA,GAFjB,EAGGjB,IAHH,CAGSO,QAAQ,CAAEjB,UAAU,CAAEyB,OAAF,CAAZ,CAHjB,EAIGb,KAJH,CAIU,UAAAC,GAAG;AAAA,WAAIe,KAAK,CAAEf,GAAG,CAACgB,OAAN,CAAT;AAAA,GAJb;AAKD;AAGD,OAAO,SAASC,cAAT,CAAyBC,WAAzB,EAAsCC,WAAtC,EAAoD;AACzDjC,EAAAA,IAAI,CAACmB,wBAAL,GACGR,IADH,CACS,UAAAU,IAAI,EAAI;AAAE,WAAOrB,IAAI,CAACkC,cAAL,CAAqBb,IAArB,EAA2BW,WAA3B,EAAwCC,WAAxC,CAAP;AAA8D,GADjF,EAEGtB,IAFH,CAES,UAAAiB,QAAQ;AAAA,WAAIC,KAAK,CAAED,QAAF,CAAT;AAAA,GAFjB,EAGGf,KAHH,CAGU,UAAAC,GAAG;AAAA,WAAIe,KAAK,CAAEf,GAAG,CAACgB,OAAN,CAAT;AAAA,GAHb;AAID","sourcesContent":["import { Auth } from 'aws-amplify'\nimport { updateUser, setUser } from '../actions/index'\n\n//-----CREATE-----//\nexport function authSignUp( username, password, preferred_username, picture, navigation ) {\n    Auth.signUp({ username, password, attributes: { preferred_username, picture } })\n        .then( navigation.navigate( 'ConfirmSignUp' ))\n        .catch( err => console.log( '❌ Error Signing Up' , err ))\n}\n\n//-----READ-----//\nexport function fetchAuthUser () {\n    return dispatch => {\n        return Auth\n            .currentAuthenticatedUser({ bypassCache: false })\n            .then(user => { dispatch( setUser({\n                id:user.attributes.sub, \n                email: user.attributes.email, \n                username: user.attributes.preferred_username, \n                picture: user.attributes.picture\n                }))\n            return null\n            })\n            .catch( err => console.log(err))\n  }\n}\n\n\n\n\n\nexport function updatePreferred_username( payload, dispatch, navigation ) { \n  Auth.currentAuthenticatedUser()\n    .then( user => { return Auth.updateUserAttributes( user, { \"preferred_username\": payload })}) \n    .then( response => alert( response ))\n    .then( dispatch( updateUser( payload )))\n    .catch( err => alert( err.message ))\n}\n\n//used by UserDetails screen\nexport function updatePassword( oldPassword, newPassword ) { \n  Auth.currentAuthenticatedUser()\n    .then( user => { return Auth.changePassword( user, oldPassword, newPassword ) })\n    .then( response => alert( response )) \n    .catch( err => alert( err.message ))\n}\n"]},"metadata":{},"sourceType":"module"}