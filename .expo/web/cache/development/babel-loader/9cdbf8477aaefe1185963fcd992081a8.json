{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = calculateNodeHeight;\nvar HIDDEN_TEXTAREA_STYLE = '\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n';\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea = undefined;\n\nfunction calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n  var minRows = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n  var maxRows = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache);\n\n  var paddingSize = _calculateNodeStyling.paddingSize;\n  var borderSize = _calculateNodeStyling.borderSize;\n  var boxSizing = _calculateNodeStyling.boxSizing;\n  var sizingStyle = _calculateNodeStyling.sizingStyle;\n  hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    height = height - paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    hiddenTextarea.value = '';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n\n      height = Math.max(minHeight, height);\n    }\n\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight\n  };\n}\n\nfunction calculateNodeStyling(node) {\n  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return name + ':' + style.getPropertyValue(name);\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/node_modules/react-native-web/node_modules/react-textarea-autosize/lib/calculateNodeHeight.js"],"names":["Object","defineProperty","exports","value","calculateNodeHeight","HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","hiddenTextarea","undefined","uiTextNode","useCache","arguments","length","minRows","maxRows","document","createElement","body","appendChild","_calculateNodeStyling","calculateNodeStyling","paddingSize","borderSize","boxSizing","sizingStyle","setAttribute","placeholder","minHeight","Infinity","maxHeight","height","scrollHeight","singleRowHeight","Math","max","min","node","nodeRef","getAttribute","style","window","getComputedStyle","getPropertyValue","parseFloat","map","name","join","nodeInfo","module"],"mappings":"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","sourcesContent":["/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = calculateNodeHeight;\nvar HIDDEN_TEXTAREA_STYLE = '\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n';\n\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\n\nvar computedStyleCache = {};\nvar hiddenTextarea = undefined;\n\nfunction calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n  var minRows = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n  var maxRows = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache);\n\n  var paddingSize = _calculateNodeStyling.paddingSize;\n  var borderSize = _calculateNodeStyling.borderSize;\n  var boxSizing = _calculateNodeStyling.boxSizing;\n  var sizingStyle = _calculateNodeStyling.sizingStyle;\n\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = '';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      height = Math.min(maxHeight, height);\n    }\n  }\n  return { height: height, minHeight: minHeight, maxHeight: maxHeight };\n}\n\nfunction calculateNodeStyling(node) {\n  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  var style = window.getComputedStyle(node);\n\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return name + ':' + style.getPropertyValue(name);\n  }).join(';');\n\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\nmodule.exports = exports['default'];\n"]},"metadata":{},"sourceType":"script"}