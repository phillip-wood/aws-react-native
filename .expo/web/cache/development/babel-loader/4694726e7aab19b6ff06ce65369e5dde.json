{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Auth } from 'aws-amplify';\nvar authUser = Auth.currentAuthenticatedUser();\nexport function updateAuthUserAttributes(property, payload) {\n  return _regeneratorRuntime.async(function updateAuthUserAttributes$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('test');\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport default {\n  updateAuthUserAttributes: updateAuthUserAttributes\n};","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/apis/auth.js"],"names":["Auth","authUser","currentAuthenticatedUser","updateAuthUserAttributes","property","payload","console","log"],"mappings":";AAAA,SAASA,IAAT,QAAqB,aAArB;AAEA,IAAMC,QAAQ,GAAGD,IAAI,CAACE,wBAAL,EAAjB;AAgBA,OAAO,SAAeC,wBAAf,CAAwCC,QAAxC,EAAkDC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAEHC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcP,eAAe;AACXJ,EAAAA,wBAAwB,EAAxBA;AADW,CAAf","sourcesContent":["import { Auth } from 'aws-amplify'\n\nconst authUser = Auth.currentAuthenticatedUser()\n\n// async function register2( username, password, preferred_username, picture ) {\n//     console.log('test')\n//     try {\n//       await Auth.signUp({ username, password, attributes: { preferred_username, picture } })\n//       console.log('✅ Sign-up Confirmed')\n//       navigation.navigate('ConfirmSignUp')\n//     } \n    \n//     catch (error) {\n//       console.log('❌ Error signing up...', error)\n//     }\n// }\n\n\nexport async function updateAuthUserAttributes(property, payload) {\n\n    console.log('test')\n    \n    // try{\n    //     await Auth.updateUserAttributes(authUser, {\n    //         [property]:[payload]\n    //     })\n    // }\n    // catch (error) {\n    //     console.error('error updating details',err)\n    // }\n}\n\nexport default {\n    updateAuthUserAttributes,\n}\n\n\n  \n// Storage.configure({ level: 'protected' })\n\n// Storage.list('profile-pics/', { level: 'protected' })\n// .then(result => console.log(result))\n// .catch(err => console.log(err))\n\n// const [picture, setPicture] = useState(user.picture)\n\n// const uploadToStorage = async pathToImageFile => {\n//   try {\n//     const response = await fetch(pathToImageFile)\n//     console.log(response)\n//     const blob = await response.blob()\n//     console.log(blob)\n//     Storage.put(`profile-pics/til.jpeg`, blob, {\n//       contentType: 'image/jpeg',\n//     })\n//   } catch (err) {\n//     console.log(err)\n//   }\n// }\n\n// const getfromStorage = async () => {\n//   try {\n//     const response = await Storage.get('profile-pics/til.jpeg')\n//     setPicture(response)\n//     }\n//   catch (err) {\n//     console.error('error accessing the user image',err)\n//   }\n// }\n\n// getfromStorage()\n// console.log(picture)\n\n// const handleAdd = (uri) => {\n// uploadToStorage(uri)\n\n// }"]},"metadata":{},"sourceType":"module"}