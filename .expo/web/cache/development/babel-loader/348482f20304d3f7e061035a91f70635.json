{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/profile/UserDetails.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { connect } from \"react-redux\";\nimport { Storage } from 'aws-amplify';\nimport colors from \"../../config/colors\";\nimport Screen from \"../../componets/Screen\";\nimport ImageInput from \"../../componets/ImageInput\";\nimport ProfileSnip from \"../../componets/ProfileSnip\";\nimport ListItemSeparator from \"../../componets/ListItemSeparator\";\nimport ListItem from \"../../componets/ListItem\";\nimport Icon from \"../../componets/Icon\";\nvar menuItems = [{\n  title: \"Username\",\n  icon: {\n    name: \"profile\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'Home'\n}, {\n  title: \"Email\",\n  icon: {\n    name: \"email\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'Home'\n}, {\n  title: \"Password\",\n  icon: {\n    name: \"key\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'UserDetails'\n}, {\n  title: \"Log Out\",\n  icon: {\n    name: \"logout\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'Logout'\n}];\n\nfunction UserDetails(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      user = _ref.user;\n  Storage.configure({\n    level: 'protected'\n  });\n  Storage.list('profile-pics/', {\n    level: 'protected'\n  }).then(function (result) {\n    return console.log(result);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n\n  var _useState = useState(user.picture),\n      _useState2 = _slicedToArray(_useState, 2),\n      picture = _useState2[0],\n      setPicture = _useState2[1];\n\n  var uploadToStorage = function uploadToStorage(pathToImageFile) {\n    var response, blob;\n    return _regeneratorRuntime.async(function uploadToStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(pathToImageFile));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 7:\n            blob = _context.sent;\n            console.log(blob);\n            Storage.put(\"profile-pics/til.jpeg\", blob, {\n              contentType: 'image/jpeg'\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var getfromStorage = function getfromStorage() {\n    var response;\n    return _regeneratorRuntime.async(function getfromStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Storage.get('profile-pics/til.jpeg'));\n\n          case 3:\n            response = _context2.sent;\n            setPicture(response);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('error accessing the user image', _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  getfromStorage();\n  console.log(picture);\n\n  var handleAdd = function handleAdd(uri) {\n    uploadToStorage(uri);\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileSnip, {\n    title: user.username,\n    image: user.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: menuItems,\n    keyExtractor: function keyExtractor(menuItem) {\n      return menuItem.title;\n    },\n    ItemSeparatorComponent: ListItemSeparator,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        IconComponent: React.createElement(Icon, {\n          name: item.icon.name,\n          backgroundColor: item.icon.backgroundColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        }),\n        onPress: function onPress() {\n          navigation.navigate(item.targetScreen);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  })), React.createElement(ImageInput, {\n    imageUris: picture,\n    onChangeImage: function onChangeImage() {\n      return onRemoveImage(uri);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    user: globalState.user\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetails);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white\n  },\n  container: {\n    marginVertical: 20\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/profile/UserDetails.js"],"names":["React","useState","connect","Storage","colors","Screen","ImageInput","ProfileSnip","ListItemSeparator","ListItem","Icon","menuItems","title","icon","name","backgroundColor","secondary","targetScreen","UserDetails","navigation","user","configure","level","list","then","result","console","log","catch","err","picture","setPicture","uploadToStorage","pathToImageFile","fetch","response","blob","put","contentType","getfromStorage","get","error","handleAdd","uri","styles","container","username","menuItem","item","navigate","onRemoveImage","mapStateToProps","globalState","StyleSheet","create","screen","white","marginVertical","logo","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AAEA,IAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,SADF;AAEJC,IAAAA,eAAe,EAAEX,MAAM,CAACY;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CADgB,EAShB;AACEL,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,OADF;AAEJC,IAAAA,eAAe,EAAEX,MAAM,CAACY;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CATgB,EAiBhB;AACEL,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,eAAe,EAAEX,MAAM,CAACY;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CAjBgB,EAyBhB;AACEL,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,eAAe,EAAEX,MAAM,CAACY;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CAzBgB,CAAlB;;AAmCA,SAASC,WAAT,OAA2C;AAAA;;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAEzCjB,EAAAA,OAAO,CAACkB,SAAR,CAAkB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAlB;AAEAnB,EAAAA,OAAO,CAACoB,IAAR,CAAa,eAAb,EAA8B;AAAED,IAAAA,KAAK,EAAE;AAAT,GAA9B,EACCE,IADD,CACM,UAAAC,MAAM;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,GADZ,EAECG,KAFD,CAEO,UAAAC,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAFV;;AAJyC,kBAQX5B,QAAQ,CAACmB,IAAI,CAACU,OAAN,CARG;AAAA;AAAA,MAQlCA,OARkC;AAAA,MAQzBC,UARyB;;AAUzC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAMC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEGC,KAAK,CAACD,eAAD,CAFR;;AAAA;AAEdE,YAAAA,QAFc;AAGpBT,YAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AAHoB;AAAA,6CAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIdA,YAAAA,IAJc;AAKpBV,YAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAjC,YAAAA,OAAO,CAACkC,GAAR,0BAAqCD,IAArC,EAA2C;AACzCE,cAAAA,WAAW,EAAE;AAD4B,aAA3C;AANoB;AAAA;;AAAA;AAAA;AAAA;AAUpBZ,YAAAA,OAAO,CAACC,GAAR;;AAVoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAcA,MAAMY,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEIpC,OAAO,CAACqC,GAAR,CAAY,uBAAZ,CAFJ;;AAAA;AAEbL,YAAAA,QAFa;AAGnBJ,YAAAA,UAAU,CAACI,QAAD,CAAV;AAHmB;AAAA;;AAAA;AAAA;AAAA;AAMnBT,YAAAA,OAAO,CAACe,KAAR,CAAc,gCAAd;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAUAF,EAAAA,cAAc;AACdb,EAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;;AAEF,MAAMY,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACzBX,IAAAA,eAAe,CAACW,GAAD,CAAf;AAED,GAHD;;AAYA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEzB,IAAI,CAAC0B,QADd;AAEE,IAAA,KAAK,EAAE1B,IAAI,CAACU,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAElC,SADR;AAEE,IAAA,YAAY,EAAE,sBAACoC,QAAD;AAAA,aAAcA,QAAQ,CAACnC,KAAvB;AAAA,KAFhB;AAGE,IAAA,sBAAsB,EAAEJ,iBAH1B;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGwC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACpC,KADd;AAEE,QAAA,aAAa,EACX,oBAAC,IAAD;AACE,UAAA,IAAI,EAAEoC,IAAI,CAACnC,IAAL,CAAUC,IADlB;AAEE,UAAA,eAAe,EAAEkC,IAAI,CAACnC,IAAL,CAAUE,eAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQE,QAAA,OAAO,EAAE,mBAAM;AAACI,UAAAA,UAAU,CAAC8B,QAAX,CAAoBD,IAAI,CAAC/B,YAAzB;AAAuC,SARzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EA2BE,oBAAC,UAAD;AACA,IAAA,SAAS,EAAEa,OADX;AAEA,IAAA,aAAa,EAAE;AAAA,aAAMoB,aAAa,CAACP,GAAD,CAAnB;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF;AAkCC;;AAED,SAASQ,eAAT,CAA0BC,WAA1B,EAAuC;AACrC,SAAO;AACLhC,IAAAA,IAAI,EAACgC,WAAW,CAAChC;AADZ,GAAP;AAGD;;AAED,eAAelB,OAAO,CAACiD,eAAD,CAAP,CAAyBjC,WAAzB,CAAf;AAEA,IAAM0B,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNxC,IAAAA,eAAe,EAAEX,MAAM,CAACoD;AADlB,GADuB;AAI/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,cAAc,EAAE;AADP,GAJoB;AAO/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPyB,CAAlB,CAAf","sourcesContent":["import React, {useState} from \"react\"\nimport { StyleSheet, View, FlatList } from \"react-native\"\nimport { connect } from \"react-redux\"\nimport { Storage } from 'aws-amplify'\n\nimport colors from \"../../config/colors\"\nimport Screen from \"../../componets/Screen\"\nimport ImageInput from \"../../componets/ImageInput\"\nimport ProfileSnip from \"../../componets/ProfileSnip\"\nimport ListItemSeparator from \"../../componets/ListItemSeparator\"\nimport ListItem from \"../../componets/ListItem\"\nimport Icon from \"../../componets/Icon\"\n\nconst menuItems = [\n  {\n    title: \"Username\",\n    icon: {\n      name: \"profile\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'Home',\n  },\n  {\n    title: \"Email\",\n    icon: {\n      name: \"email\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'Home',\n  },\n  {\n    title: \"Password\",\n    icon: {\n      name: \"key\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'UserDetails',\n  },\n  {\n    title: \"Log Out\",\n    icon: {\n      name: \"logout\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'Logout',\n  },\n]\n\nfunction UserDetails({ navigation, user }) {\n  \n  Storage.configure({ level: 'protected' })\n\n  Storage.list('profile-pics/', { level: 'protected' })\n  .then(result => console.log(result))\n  .catch(err => console.log(err))\n\n  const [picture, setPicture] = useState(user.picture)\n\n  const uploadToStorage = async pathToImageFile => {\n    try {\n      const response = await fetch(pathToImageFile)\n      console.log(response)\n      const blob = await response.blob()\n      console.log(blob)\n      Storage.put(`profile-pics/til.jpeg`, blob, {\n        contentType: 'image/jpeg',\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const getfromStorage = async () => {\n    try {\n      const response = await Storage.get('profile-pics/til.jpeg')\n      setPicture(response)\n      }\n    catch (err) {\n      console.error('error accessing the user image',err)\n    }\n  }\n\n  getfromStorage()\n  console.log(picture)\n\nconst handleAdd = (uri) => {\n  uploadToStorage(uri)\n  \n}\n\n// const handleRemove = (uri) => {\n//   setFieldValue(\n//     name,\n//     imageUris.filter((imageUri) => imageUri !== uri)\n//   )\n// }\n\nreturn (\n  <Screen>\n    <View style={styles.container}>\n        <ProfileSnip\n          title={user.username}\n          image={user.picture}\n        />\n      </View>\n    <View style={styles.container}>\n      <FlatList\n        data={menuItems}\n        keyExtractor={(menuItem) => menuItem.title}\n        ItemSeparatorComponent={ListItemSeparator}\n        renderItem={({ item }) => (\n          <ListItem\n            title={item.title}\n            IconComponent={\n              <Icon\n                name={item.icon.name}\n                backgroundColor={item.icon.backgroundColor}\n              />\n            }\n            onPress={() => {navigation.navigate(item.targetScreen)}}\n          />\n        )}\n      />\n    </View>\n\n    <ImageInput \n    imageUris={picture}\n    onChangeImage={() => onRemoveImage(uri)}\n    />\n  </Screen>\n)\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    user:globalState.user\n  }\n}\n\nexport default connect(mapStateToProps)(UserDetails)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n  },\n  container: {\n    marginVertical: 20,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}