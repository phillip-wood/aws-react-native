{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/profile/profile.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport Amplify, { Storage } from 'aws-amplify';\nimport ListItemSeparator from \"../../componets/ListItemSeparator\";\nimport colors from \"../../config/colors\";\nimport Icon from \"../../componets/Icon\";\nimport Screen from \"../../componets/Screen\";\nimport UserSnip from \"../../componets/userSnip\";\nvar menuItems = [{\n  title: \"My Collection\",\n  icon: {\n    name: \"format-list-bulleted\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'Home'\n}, {\n  title: \"My Details\",\n  icon: {\n    name: \"email\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'Home'\n}, {\n  title: \"Log Out\",\n  icon: {\n    name: \"logout\",\n    backgroundColor: colors.secondary\n  },\n  targetScreen: 'Logout'\n}];\nStorage.configure({\n  level: 'private'\n});\n\nfunction Profile(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      user = _ref.user;\n\n  function userPic() {\n    var userProfileUrl;\n    return _regeneratorRuntime.async(function userPic$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Storage.get(user.picture, {\n              expires: 60\n            }));\n\n          case 3:\n            userProfileUrl = _context.sent;\n            console.log(userProfileUrl);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('error accessing the user image', err);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  userPic();\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: userPic(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(UserSnip, {\n    title: user.username,\n    subTitle: \"Sneaker Count 5\",\n    image: require(\"../../\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: menuItems,\n    keyExtractor: function keyExtractor(menuItem) {\n      return menuItem.title;\n    },\n    ItemSeparatorComponent: ListItemSeparator,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(UserSnip, {\n        title: item.title,\n        IconComponent: React.createElement(Icon, {\n          name: item.icon.name,\n          backgroundColor: item.icon.backgroundColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }),\n        onPress: function onPress() {\n          navigation.navigate(item.targetScreen);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    user: globalState.user\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white\n  },\n  container: {\n    marginVertical: 20\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/profile/profile.js"],"names":["React","connect","Amplify","Storage","ListItemSeparator","colors","Icon","Screen","UserSnip","menuItems","title","icon","name","backgroundColor","secondary","targetScreen","configure","level","Profile","navigation","user","userPic","get","picture","expires","userProfileUrl","console","log","error","err","styles","screen","container","username","require","menuItem","item","navigate","mapStateToProps","globalState","StyleSheet","create","white","marginVertical"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,IAAkBC,OAAlB,QAAiC,aAAjC;AAEA,OAAOC,iBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AAEA,IAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,sBADF;AAEJC,IAAAA,eAAe,EAAER,MAAM,CAACS;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CADgB,EAShB;AACEL,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,OADF;AAEJC,IAAAA,eAAe,EAAER,MAAM,CAACS;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CATgB,EAiBhB;AACEL,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,eAAe,EAAER,MAAM,CAACS;AAFpB,GAFR;AAMEC,EAAAA,YAAY,EAAE;AANhB,CAjBgB,CAAlB;AA2BAZ,OAAO,CAACa,SAAR,CAAkB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAlB;;AAKA,SAASC,OAAT,OAAuC;AAAA;;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAGtC,WAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEgClB,OAAO,CAACmB,GAAR,CAAYF,IAAI,CAACG,OAAjB,EAA0B;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAA1B,CAFhC;;AAAA;AAESC,YAAAA,cAFT;AAGGC,YAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AAHH;AAAA;;AAAA;AAAA;AAAA;AAKGC,YAAAA,OAAO,CAACE,KAAR,CAAc,gCAAd,EAA+CC,GAA/C;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASDR,EAAAA,OAAO;AAGL,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAES,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,OAAO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEZ,IAAI,CAACa,QADd;AAEE,IAAA,QAAQ,EAAC,iBAFX;AAGE,IAAA,KAAK,EAAEC,OAAO,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEvB,SADR;AAEE,IAAA,YAAY,EAAE,sBAAC0B,QAAD;AAAA,aAAcA,QAAQ,CAACzB,KAAvB;AAAA,KAFhB;AAGE,IAAA,sBAAsB,EAAEN,iBAH1B;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGgC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAAC1B,KADd;AAEE,QAAA,aAAa,EACX,oBAAC,IAAD;AACE,UAAA,IAAI,EAAE0B,IAAI,CAACzB,IAAL,CAAUC,IADlB;AAEE,UAAA,eAAe,EAAEwB,IAAI,CAACzB,IAAL,CAAUE,eAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQE,QAAA,OAAO,EAAE,mBAAM;AAACM,UAAAA,UAAU,CAACkB,QAAX,CAAoBD,IAAI,CAACrB,YAAzB;AAAuC,SARzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AA+BD;;AAED,SAASuB,eAAT,CAA0BC,WAA1B,EAAuC;AACrC,SAAO;AACLnB,IAAAA,IAAI,EAACmB,WAAW,CAACnB;AADZ,GAAP;AAGD;;AAED,eAAenB,OAAO,CAACqC,eAAD,CAAP,CAAyBpB,OAAzB,CAAf;AAEA,IAAMY,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNlB,IAAAA,eAAe,EAAER,MAAM,CAACqC;AADlB,GADuB;AAI/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,cAAc,EAAE;AADP;AAJoB,CAAlB,CAAf","sourcesContent":["import React from \"react\"\nimport { StyleSheet, View, FlatList, Image } from \"react-native\"\nimport { connect } from \"react-redux\"\nimport Amplify, { Storage } from 'aws-amplify'\n\nimport ListItemSeparator from \"../../componets/ListItemSeparator\"\nimport colors from \"../../config/colors\"\nimport Icon from \"../../componets/Icon\"\nimport Screen from \"../../componets/Screen\"\nimport UserSnip from \"../../componets/userSnip\"\n\nconst menuItems = [\n  {\n    title: \"My Collection\",\n    icon: {\n      name: \"format-list-bulleted\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'Home',\n  },\n  {\n    title: \"My Details\",\n    icon: {\n      name: \"email\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'Home',\n  },\n  {\n    title: \"Log Out\",\n    icon: {\n      name: \"logout\",\n      backgroundColor: colors.secondary,\n    },\n    targetScreen: 'Logout',\n  },\n]\n\nStorage.configure({ level: 'private' })\n\n\n\n\nfunction Profile({ navigation, user }) {\n\n\n async function userPic() {\n  try {\n    const userProfileUrl = await Storage.get(user.picture, { expires: 60 })\n    console.log(userProfileUrl)\n  } catch (error) {\n    console.error('error accessing the user image',err)\n  }\n }\n\nuserPic()\n  \n  \n  return (\n    <Screen style={styles.screen}>\n      <Image source={userPic()}/>\n      <View style={styles.container}>\n        <UserSnip\n          title={user.username}\n          subTitle=\"Sneaker Count 5\"\n          image={require('../../')}\n        />\n      </View>\n      <View style={styles.container}>\n        <FlatList\n          data={menuItems}\n          keyExtractor={(menuItem) => menuItem.title}\n          ItemSeparatorComponent={ListItemSeparator}\n          renderItem={({ item }) => (\n            <UserSnip\n              title={item.title}\n              IconComponent={\n                <Icon\n                  name={item.icon.name}\n                  backgroundColor={item.icon.backgroundColor}\n                />\n              }\n              onPress={() => {navigation.navigate(item.targetScreen)}}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  )\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    user:globalState.user\n  }\n}\n\nexport default connect(mapStateToProps)(Profile)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n  },\n  container: {\n    marginVertical: 20,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}