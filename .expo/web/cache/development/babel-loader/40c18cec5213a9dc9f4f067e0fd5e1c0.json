{"ast":null,"code":"import { Auth } from 'aws-amplify';\nexport default function updateAuthUserAttributes(property, payload) {\n  console.log('test');\n}","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/apis/auth.js"],"names":["Auth","updateAuthUserAttributes","property","payload","console","log"],"mappings":"AAAA,SAASA,IAAT,QAAqB,aAArB;AAkBA,eAAe,SAASC,wBAAT,CAAkCC,QAAlC,EAA4CC,OAA5C,EAAqD;AAEhEC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAUH","sourcesContent":["import { Auth } from 'aws-amplify'\n\n// const authUser = Auth.currentAuthenticatedUser()\n\n// async function register2( username, password, preferred_username, picture ) {\n//     console.log('test')\n//     try {\n//       await Auth.signUp({ username, password, attributes: { preferred_username, picture } })\n//       console.log('✅ Sign-up Confirmed')\n//       navigation.navigate('ConfirmSignUp')\n//     } \n    \n//     catch (error) {\n//       console.log('❌ Error signing up...', error)\n//     }\n// }\n\n\nexport default function updateAuthUserAttributes(property, payload) {\n\n    console.log('test')\n    \n    // try{\n    //     await Auth.updateUserAttributes(authUser, {\n    //         [property]:[payload]\n    //     })\n    // }\n    // catch (error) {\n    //     console.error('error updating details',err)\n    // }\n}\n\n\n\n\n  \n// Storage.configure({ level: 'protected' })\n\n// Storage.list('profile-pics/', { level: 'protected' })\n// .then(result => console.log(result))\n// .catch(err => console.log(err))\n\n// const [picture, setPicture] = useState(user.picture)\n\n// const uploadToStorage = async pathToImageFile => {\n//   try {\n//     const response = await fetch(pathToImageFile)\n//     console.log(response)\n//     const blob = await response.blob()\n//     console.log(blob)\n//     Storage.put(`profile-pics/til.jpeg`, blob, {\n//       contentType: 'image/jpeg',\n//     })\n//   } catch (err) {\n//     console.log(err)\n//   }\n// }\n\n// const getfromStorage = async () => {\n//   try {\n//     const response = await Storage.get('profile-pics/til.jpeg')\n//     setPicture(response)\n//     }\n//   catch (err) {\n//     console.error('error accessing the user image',err)\n//   }\n// }\n\n// getfromStorage()\n// console.log(picture)\n\n// const handleAdd = (uri) => {\n// uploadToStorage(uri)\n\n// }"]},"metadata":{},"sourceType":"module"}