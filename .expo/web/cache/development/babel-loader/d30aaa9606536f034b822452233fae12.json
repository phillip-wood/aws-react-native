{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/profile/EditPic.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport { Auth, Storage } from 'aws-amplify';\nimport colors from \"../../config/colors\";\nimport Screen from \"../../componets/Screen\";\nimport ProfileImageInput from \"../../componets/ProfileImageInput\";\nimport ProfileSnip from \"../../componets/ProfileSnip\";\nimport AppText from \"../../componets/AppText\";\n\nfunction Editpic(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user,\n      dispatch = _ref.dispatch;\n  var authUser = Auth.currentAuthenticatedUser();\n  Storage.configure({\n    level: 'protected'\n  });\n\n  var _useState = useState(user.picture),\n      _useState2 = _slicedToArray(_useState, 2),\n      picture = _useState2[0],\n      setPicture = _useState2[1];\n\n  var uploadToStorage = function uploadToStorage(pathToImageFile) {\n    var response, blob;\n    return _regeneratorRuntime.async(function uploadToStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(pathToImageFile));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context.sent;\n            Storage.put(\"profile-pics/profile-picture.jpeg\", blob, {\n              contentType: 'image/jpeg'\n            }).then(getfromStorage());\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var getfromStorage = function getfromStorage() {\n    var response;\n    return _regeneratorRuntime.async(function getfromStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Storage.get('profile-pics/profile-picture.jpeg'));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('error accessing the user image', _context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var handleAdd = function handleAdd(uri) {\n    uploadToStorage(uri);\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileSnip, {\n    title: user.username,\n    image: user.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Click the camera Icon below to upload new profile picture\"), React.createElement(ProfileImageInput, {\n    imageUri: picture,\n    onChangeImage: function onChangeImage(uri) {\n      return handleAdd(uri);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    user: globalState.user\n  };\n}\n\nexport default connect(mapStateToProps)(Editpic);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white\n  },\n  container: {\n    marginVertical: 20\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/profile/EditPic.js"],"names":["React","useState","connect","Auth","Storage","colors","Screen","ProfileImageInput","ProfileSnip","AppText","Editpic","navigation","user","dispatch","authUser","currentAuthenticatedUser","configure","level","picture","setPicture","uploadToStorage","pathToImageFile","fetch","response","blob","put","contentType","then","getfromStorage","console","log","get","error","handleAdd","uri","styles","container","username","mapStateToProps","globalState","StyleSheet","create","screen","backgroundColor","white","marginVertical","logo","width","height"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport { StyleSheet, View} from \"react-native\"\nimport { connect } from \"react-redux\"\nimport { Auth, Storage } from 'aws-amplify'\n\nimport colors from \"../../config/colors\"\nimport Screen from \"../../componets/Screen\"\nimport ProfileImageInput from \"../../componets/ProfileImageInput\"\nimport ProfileSnip from \"../../componets/ProfileSnip\"\nimport AppText from \"../../componets/AppText\"\n\nfunction Editpic({ navigation, user, dispatch }) {\n    \nlet authUser = Auth.currentAuthenticatedUser()\n    \n    Storage.configure({ level: 'protected' })\n\n    const [picture, setPicture] = useState(user.picture)\n\n    const uploadToStorage = async pathToImageFile => {\n        try {\n        const response = await fetch(pathToImageFile)\n        const blob = await response.blob()\n        Storage.put(`profile-pics/profile-picture.jpeg`, blob, {\n            contentType: 'image/jpeg',\n        })\n        .then(getfromStorage())\n        } \n        catch (err) {\n            console.log(err)\n    }\n  }\n\n  const getfromStorage = async () => {\n    try {\n      const response = await Storage.get('profile-pics/profile-picture.jpeg')\n      \n\n      }\n    catch (err) {\n      console.error('error accessing the user image',err)\n    }\n  }\n\nconst handleAdd = (uri) => {\n  uploadToStorage(uri)\n  \n}\n\nreturn (\n  <Screen>\n    <View style={styles.container}>\n        <ProfileSnip\n          title={user.username}\n          image={user.picture}\n        />\n      </View>\n    <View style={styles.container}>\n        <AppText>Click the camera Icon below to upload new profile picture</AppText>\n        <ProfileImageInput \n        imageUri={picture}\n        onChangeImage={(uri) => handleAdd(uri)}\n        /> \n    </View>\n\n  </Screen>\n)\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    user:globalState.user\n  }\n}\n\nexport default connect(mapStateToProps)(Editpic)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n  },\n  container: {\n    marginVertical: 20,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n})"]},"metadata":{},"sourceType":"module"}