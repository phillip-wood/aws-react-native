{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_AUTH_USER, UPDATE_USER_USERNAME } from \"../actions\";\nvar initialState = [];\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return action.authUser;\n\n    case UPDATE_USER_USERNAME:\n      var newState = _objectSpread({}, state);\n\n      newState.username = action.username;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/reducers/authUser.js"],"names":["SET_AUTH_USER","UPDATE_USER_USERNAME","initialState","reducer","state","action","type","authUser","newState","username"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAyBC,oBAAzB;AAEA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAOK,MAAM,CAACE,QAAd;;AACF,SAAKN,oBAAL;AACE,UAAIO,QAAQ,qBAAOJ,KAAP,CAAZ;;AACAI,MAAAA,QAAQ,CAACC,QAAT,GAAoBJ,MAAM,CAACI,QAA3B;AACF,aAAOD,QAAP;;AACA;AACE,aAAOJ,KAAP;AARJ;AAUD,CAXD;;AAYA,eAAeD,OAAf","sourcesContent":["import { SET_AUTH_USER , UPDATE_USER_USERNAME } from '../actions'\n\nconst initialState = []\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return action.authUser\n    case UPDATE_USER_USERNAME:\n      let newState = {...state}\n      newState.username = action.username\n    return newState\n    default:\n      return state\n  }\n}\nexport default reducer"]},"metadata":{},"sourceType":"module"}