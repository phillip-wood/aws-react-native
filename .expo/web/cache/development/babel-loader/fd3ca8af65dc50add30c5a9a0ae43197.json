{"ast":null,"code":"'use strict';\n\nvar _react = require('react');\n\nvar ArrayOfNumberPropType = _react.PropTypes.arrayOf(_react.PropTypes.number);\n\nvar numberOrString = _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]);\n\nvar TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {\n  if (props.transform && props.transformMatrix) {\n    return new Error('transformMatrix and transform styles cannot be used on the same ' + 'component');\n  }\n\n  return ArrayOfNumberPropType(props, propName, componentName);\n};\n\nvar TransformPropTypes = {\n  transform: _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.shape({\n    perspective: numberOrString\n  }), _react.PropTypes.shape({\n    rotate: numberOrString\n  }), _react.PropTypes.shape({\n    rotateX: numberOrString\n  }), _react.PropTypes.shape({\n    rotateY: numberOrString\n  }), _react.PropTypes.shape({\n    rotateZ: numberOrString\n  }), _react.PropTypes.shape({\n    scale: numberOrString\n  }), _react.PropTypes.shape({\n    scaleX: numberOrString\n  }), _react.PropTypes.shape({\n    scaleY: numberOrString\n  }), _react.PropTypes.shape({\n    skewX: numberOrString\n  }), _react.PropTypes.shape({\n    skewY: numberOrString\n  }), _react.PropTypes.shape({\n    translateX: numberOrString\n  }), _react.PropTypes.shape({\n    translateY: numberOrString\n  }), _react.PropTypes.shape({\n    translateZ: numberOrString\n  }), _react.PropTypes.shape({\n    translate3d: _react.PropTypes.string\n  })])),\n  transformMatrix: TransformMatrixPropType\n};\nmodule.exports = TransformPropTypes;","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/node_modules/react-native-web/dist/apis/StyleSheet/TransformPropTypes.js"],"names":["_react","require","ArrayOfNumberPropType","PropTypes","arrayOf","number","numberOrString","oneOfType","string","TransformMatrixPropType","props","propName","componentName","transform","transformMatrix","Error","TransformPropTypes","shape","perspective","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","skewX","skewY","translateX","translateY","translateZ","translate3d","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,qBAAqB,GAAGF,MAAM,CAACG,SAAP,CAAiBC,OAAjB,CAAyBJ,MAAM,CAACG,SAAP,CAAiBE,MAA1C,CAA5B;;AAOA,IAAIC,cAAc,GAAGN,MAAM,CAACG,SAAP,CAAiBI,SAAjB,CAA2B,CAACP,MAAM,CAACG,SAAP,CAAiBE,MAAlB,EAA0BL,MAAM,CAACG,SAAP,CAAiBK,MAA3C,CAA3B,CAArB;;AAEA,IAAIC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,aAAlD,EAAiE;AAC7F,MAAIF,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACI,eAA7B,EAA8C;AAC5C,WAAO,IAAIC,KAAJ,CAAU,qEAAqE,WAA/E,CAAP;AACD;;AACD,SAAOb,qBAAqB,CAACQ,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,CAA5B;AACD,CALD;;AAOA,IAAII,kBAAkB,GAAG;AACvBH,EAAAA,SAAS,EAAEb,MAAM,CAACG,SAAP,CAAiBC,OAAjB,CAAyBJ,MAAM,CAACG,SAAP,CAAiBI,SAAjB,CAA2B,CAACP,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEC,IAAAA,WAAW,EAAEZ;AAAf,GAAvB,CAAD,EAA0DN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEE,IAAAA,MAAM,EAAEb;AAAV,GAAvB,CAA1D,EAA8GN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEG,IAAAA,OAAO,EAAEd;AAAX,GAAvB,CAA9G,EAAmKN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEI,IAAAA,OAAO,EAAEf;AAAX,GAAvB,CAAnK,EAAwNN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEK,IAAAA,OAAO,EAAEhB;AAAX,GAAvB,CAAxN,EAA6QN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEM,IAAAA,KAAK,EAAEjB;AAAT,GAAvB,CAA7Q,EAAgUN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEO,IAAAA,MAAM,EAAElB;AAAV,GAAvB,CAAhU,EAAoXN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEQ,IAAAA,MAAM,EAAEnB;AAAV,GAAvB,CAApX,EAAwaN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAES,IAAAA,KAAK,EAAEpB;AAAT,GAAvB,CAAxa,EAA2dN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEU,IAAAA,KAAK,EAAErB;AAAT,GAAvB,CAA3d,EAA8gBN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEW,IAAAA,UAAU,EAAEtB;AAAd,GAAvB,CAA9gB,EAAskBN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEY,IAAAA,UAAU,EAAEvB;AAAd,GAAvB,CAAtkB,EAA8nBN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEa,IAAAA,UAAU,EAAExB;AAAd,GAAvB,CAA9nB,EAAsrBN,MAAM,CAACG,SAAP,CAAiBc,KAAjB,CAAuB;AAAEc,IAAAA,WAAW,EAAE/B,MAAM,CAACG,SAAP,CAAiBK;AAAhC,GAAvB,CAAtrB,CAA3B,CAAzB,CADY;AAEvBM,EAAAA,eAAe,EAAEL;AAFM,CAAzB;AAKAuB,MAAM,CAACC,OAAP,GAAiBjB,kBAAjB","sourcesContent":["'use strict';\n\nvar _react = require('react');\n\nvar ArrayOfNumberPropType = _react.PropTypes.arrayOf(_react.PropTypes.number); /**\n                                                                                * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                * All rights reserved.\n                                                                                *\n                                                                                * \n                                                                                */\n\nvar numberOrString = _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]);\n\nvar TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {\n  if (props.transform && props.transformMatrix) {\n    return new Error('transformMatrix and transform styles cannot be used on the same ' + 'component');\n  }\n  return ArrayOfNumberPropType(props, propName, componentName);\n};\n\nvar TransformPropTypes = {\n  transform: _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.shape({ perspective: numberOrString }), _react.PropTypes.shape({ rotate: numberOrString }), _react.PropTypes.shape({ rotateX: numberOrString }), _react.PropTypes.shape({ rotateY: numberOrString }), _react.PropTypes.shape({ rotateZ: numberOrString }), _react.PropTypes.shape({ scale: numberOrString }), _react.PropTypes.shape({ scaleX: numberOrString }), _react.PropTypes.shape({ scaleY: numberOrString }), _react.PropTypes.shape({ skewX: numberOrString }), _react.PropTypes.shape({ skewY: numberOrString }), _react.PropTypes.shape({ translateX: numberOrString }), _react.PropTypes.shape({ translateY: numberOrString }), _react.PropTypes.shape({ translateZ: numberOrString }), _react.PropTypes.shape({ translate3d: _react.PropTypes.string })])),\n  transformMatrix: TransformMatrixPropType\n};\n\nmodule.exports = TransformPropTypes;"]},"metadata":{},"sourceType":"script"}