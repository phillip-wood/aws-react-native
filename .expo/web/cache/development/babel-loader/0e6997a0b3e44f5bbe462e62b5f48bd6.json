{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/componets/ProfileImageInput.js\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport colors from \"../config/colors\";\n\nfunction ProfileImageInput(_ref) {\n  var onChangeImage = _ref.onChangeImage;\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to enable permission to access the library.\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress() {\n    selectImage();\n  };\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 3:\n            result = _context2.sent;\n            if (!result.cancelled) onChangeImage(result.uri);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error reading an image\", _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    color: colors.grey,\n    name: \"camera\",\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: colors.light,\n    borderRadius: 15,\n    height: 100,\n    justifyContent: \"center\",\n    marginVertical: 10,\n    overflow: \"hidden\",\n    width: 100\n  },\n  image: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n});\nexport default ProfileImageInput;","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/componets/ProfileImageInput.js"],"names":["React","useEffect","MaterialCommunityIcons","ImagePicker","colors","ProfileImageInput","onChangeImage","requestPermission","requestMediaLibraryPermissionsAsync","granted","alert","handlePress","selectImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","uri","console","log","styles","container","grey","StyleSheet","create","alignItems","backgroundColor","light","borderRadius","height","justifyContent","marginVertical","overflow","width","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAQA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,OAAOC,MAAP;;AAEA,SAASC,iBAAT,OAA8C;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;AAC5CL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEJ,WAAW,CAACK,mCAAZ,EADF;;AAAA;AAAA;AAChBC,YAAAA,OADgB,yBAChBA,OADgB;AAExB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,sDAAD,CAAL;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,IAAAA,WAAW;AACZ,GAFD;;AAIA,MAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKT,WAAW,CAACU,uBAAZ,CAAoC;AACvDC,cAAAA,UAAU,EAAEX,WAAW,CAACY,gBAAZ,CAA6BC,MADc;AAEvDC,cAAAA,OAAO,EAAE;AAF8C,aAApC,CAFL;;AAAA;AAEVC,YAAAA,MAFU;AAMhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuBb,aAAa,CAACY,MAAM,CAACE,GAAR,CAAb;AANP;AAAA;;AAAA;AAAA;AAAA;AAQhBC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAYA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEX,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAEpB,MAAM,CAACqB,IADhB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,CADF;AAWD;;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,eAAe,EAAEzB,MAAM,CAAC0B,KAFf;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,MAAM,EAAE,GAJC;AAKTC,IAAAA,cAAc,EAAE,QALP;AAMTC,IAAAA,cAAc,EAAE,EANP;AAOTC,IAAAA,QAAQ,EAAE,QAPD;AAQTC,IAAAA,KAAK,EAAE;AARE,GADoB;AAW/BC,EAAAA,KAAK,EAAE;AACLL,IAAAA,MAAM,EAAE,MADH;AAELI,IAAAA,KAAK,EAAE;AAFF;AAXwB,CAAlB,CAAf;AAiBA,eAAe/B,iBAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport {\n  View,\n  StyleSheet,\n  Image,\n  TouchableWithoutFeedback,\n  Alert,\n} from \"react-native\"\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\"\nimport * as ImagePicker from \"expo-image-picker\"\n\nimport colors from \"../config/colors\"\n\nfunction ProfileImageInput({ onChangeImage }) {\n  useEffect(() => {\n    requestPermission()\n  }, [])\n\n  const requestPermission = async () => {\n    const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync()\n    if (!granted) alert(\"You need to enable permission to access the library.\")\n  }\n\n  const handlePress = () => {\n    selectImage()\n  }\n\n  const selectImage = async () => {\n    try {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 0.5,\n      })\n      if (!result.cancelled) onChangeImage(result.uri)\n    } catch (error) {\n      console.log(\"Error reading an image\", error)\n    }\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={handlePress}>\n      <View style={styles.container}>\n          <MaterialCommunityIcons\n            color={colors.grey}\n            name=\"camera\"\n            size={40}\n          />\n      </View>\n    </TouchableWithoutFeedback>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: colors.light,\n    borderRadius: 15,\n    height: 100,\n    justifyContent: \"center\",\n    marginVertical: 10,\n    overflow: \"hidden\",\n    width: 100,\n  },\n  image: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n})\n\nexport default ProfileImageInput"]},"metadata":{},"sourceType":"module"}