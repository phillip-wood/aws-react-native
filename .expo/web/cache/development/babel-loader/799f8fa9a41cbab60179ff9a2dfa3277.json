{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/profile/UserDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport colors from \"../../config/colors\";\nimport Screen from \"../../componets/Screen\";\nimport ProfileImageInput from \"../../componets/ProfileImageInput\";\nimport ProfileSnip from \"../../componets/ProfileSnip\";\nimport ListItem from \"../../componets/ListItem\";\nimport Icon from \"../../componets/Icon\";\nimport AppText from \"../../componets/AppText\";\nimport ListItemSeparator from \"../../componets/ListItemSeparator\";\nimport { updatePreferred_username } from \"../../../apis/auth\";\nimport AppTextInput from \"../../componets/AppTextInput\";\nimport AppButton from \"../../componets/AppButton\";\nimport { s3UploadProfilePic } from \"../../../apis/storage\";\n\nfunction UserDetails(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      preferred_username = _useState2[0],\n      setPreferred_username = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldPassword = _useState4[0],\n      setOldPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPassword = _useState6[0],\n      setNewPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      preferred_usernameClicked = _useState8[0],\n      setPreferred_usernameClicked = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      usernameClicked = _useState10[0],\n      setUsernameClicked = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordClicked = _useState12[0],\n      setPasswordClicked = _useState12[1];\n\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileSnip, {\n    title: user.username,\n    image: user.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Account Details\"), React.createElement(ListItem, {\n    title: 'Username',\n    subTitle: user.username,\n    IconComponent: React.createElement(Icon, {\n      name: 'account',\n      backgroundColor: colors.primary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }),\n    onPress: function onPress() {\n      setPreferred_usernameClicked(function (prevPreferred_usernameClicked) {\n        return !prevPreferred_usernameClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), preferred_usernameClicked ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(AppTextInput, {\n    value: preferred_username,\n    onChangeText: function onChangeText(text) {\n      return setPreferred_username(text);\n    },\n    leftIcon: \"account\",\n    placeholder: \"Enter New Username\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Save Changes\",\n    onPress: function onPress() {\n      return updatePreferred_username(preferred_username, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })) : null, React.createElement(ListItemSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem, {\n    title: 'Email',\n    subTitle: user.email,\n    IconComponent: React.createElement(Icon, {\n      name: 'email',\n      backgroundColor: colors.primary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }),\n    onPress: function onPress() {\n      setUsernameClicked(function (prevUsernameClicked) {\n        return !prevUsernameClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), usernameClicked ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(AppTextInput, {\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    leftIcon: \"account\",\n    placeholder: \"Enter New Username\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Save Changes\",\n    onPress: function onPress() {\n      return updateAuthUserAttributes('preferred_username', preferred_username, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })) : null, React.createElement(ListItemSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem, {\n    title: 'Password',\n    subTitle: '***********',\n    IconComponent: React.createElement(Icon, {\n      name: 'key',\n      backgroundColor: colors.primary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }),\n    onPress: function onPress() {\n      setPasswordClicked(function (prevPasswordClicked) {\n        return !prevPasswordClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), passwordClicked ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(AppTextInput, {\n    value: oldPassword,\n    onChangeText: function onChangeText(text) {\n      return setOldPassword(text);\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Save Changes\",\n    onPress: function onPress() {\n      return updateAuthUserAttributes('preferred_username', preferred_username, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })) : null));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    user: globalState.user\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetails);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n    padding: 10\n  },\n  container: {\n    marginVertical: 20\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/profile/UserDetails.js"],"names":["React","useState","useEffect","connect","colors","Screen","ProfileImageInput","ProfileSnip","ListItem","Icon","AppText","ListItemSeparator","updatePreferred_username","AppTextInput","AppButton","s3UploadProfilePic","UserDetails","navigation","user","dispatch","preferred_username","setPreferred_username","oldPassword","setOldPassword","newPassword","setNewPassword","preferred_usernameClicked","setPreferred_usernameClicked","usernameClicked","setUsernameClicked","passwordClicked","setPasswordClicked","styles","screen","container","username","picture","primary","prevPreferred_usernameClicked","text","email","prevUsernameClicked","setUsername","updateAuthUserAttributes","prevPasswordClicked","mapStateToProps","globalState","StyleSheet","create","backgroundColor","white","padding","marginVertical","logo","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { StyleSheet, View } from \"react-native\"\nimport { connect } from \"react-redux\"\n\nimport colors from \"../../config/colors\"\nimport Screen from \"../../componets/Screen\"\nimport ProfileImageInput from \"../../componets/ProfileImageInput\"\nimport ProfileSnip from \"../../componets/ProfileSnip\"\nimport ListItem from \"../../componets/ListItem\"\nimport Icon from \"../../componets/Icon\"\nimport AppText from \"../../componets/AppText\"\nimport ListItemSeparator from \"../../componets/ListItemSeparator\"\nimport { updatePreferred_username } from \"../../../apis/auth\"\nimport AppTextInput from \"../../componets/AppTextInput\"\nimport AppButton from \"../../componets/AppButton\"\nimport { s3UploadProfilePic } from \"../../../apis/storage\"\n\n\nfunction UserDetails({ navigation, user, dispatch }) {\n  //username is actually email its an aws thing\n  const [preferred_username, setPreferred_username] = useState('')\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [preferred_usernameClicked, setPreferred_usernameClicked] = useState(false)\n  const [usernameClicked, setUsernameClicked] = useState(false)\n  const [passwordClicked, setPasswordClicked] = useState(false)\n\n\nreturn (\n  <Screen style={styles.screen}>\n    \n    <View style={styles.container}>\n        <ProfileSnip\n          title={user.username}\n          image={user.picture}\n        />\n    </View>\n\n    <View style={styles.container}>\n      {/* <ProfileImageInput \n        onChangeImage={(uri) => s3UploadProfilePic(uri, dispatch)}\n        /> \n       */}\n      <AppText>Account Details</AppText>\n      \n      <ListItem\n        title={'Username'}\n        subTitle={user.username}\n        IconComponent={\n          <Icon\n            name={'account'}\n            backgroundColor={colors.primary}\n            />\n          }\n        onPress={() => {setPreferred_usernameClicked( prevPreferred_usernameClicked => !prevPreferred_usernameClicked )}}\n        />\n      \n      {preferred_usernameClicked ? (\n        <View>\n        <AppTextInput\n        value={preferred_username}\n        onChangeText={text => setPreferred_username(text)}\n        leftIcon=\"account\"\n        placeholder=\"Enter New Username\"\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        /> \n        <AppButton title=\"Save Changes\" onPress={() => updatePreferred_username( preferred_username, dispatch )} />\n        </View>\n          ): null }\n\n      <ListItemSeparator/>\n\n      <ListItem\n        title={'Email'}\n        subTitle={user.email}\n        IconComponent={\n          <Icon\n            name={'email'}\n            backgroundColor={colors.primary}\n            />\n          }\n        onPress={() => { setUsernameClicked( prevUsernameClicked => !prevUsernameClicked )}}\n          />\n      {usernameClicked ? (\n        <View>\n        <AppTextInput\n        value={username}\n        onChangeText={text => setUsername(text)}\n        leftIcon=\"account\"\n        placeholder=\"Enter New Username\"\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        /> \n        <AppButton title=\"Save Changes\" onPress={() => updateAuthUserAttributes(\n          'preferred_username', preferred_username, dispatch )} />\n        </View>\n          ): null }\n      <ListItemSeparator/>\n\n      <ListItem\n        title={'Password'}\n        subTitle={'***********'}\n        IconComponent={\n          <Icon\n            name={'key'}\n            backgroundColor={colors.primary}\n            />\n          }\n        onPress={() => { setPasswordClicked( prevPasswordClicked => !prevPasswordClicked )}}\n          />\n      {passwordClicked ? (\n        <View>\n        <AppTextInput\n          value={oldPassword}\n          onChangeText={text => setOldPassword(text)}\n          leftIcon=\"lock\"\n          placeholder=\"Enter password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <AppButton title=\"Save Changes\" onPress={() => updateAuthUserAttributes(\n          'preferred_username', preferred_username, dispatch )} />\n        </View>\n          ): null }\n      \n    </View>\n  </Screen>\n)\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    user:globalState.user\n  }\n}\n\nexport default connect(mapStateToProps)(UserDetails)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n    padding: 10\n  },\n  container: {\n    marginVertical: 20,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}