{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/account/EditProfile.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport colors from \"../../config/colors\";\nimport Screen from \"../../componets/Screen\";\nimport ProfileSnip from \"../../componets/ProfileSnip\";\nimport ListItem from \"../../componets/ListItem\";\nimport Icon from \"../../componets/Icon\";\nimport AppText from \"../../componets/AppText\";\nimport ListItemSeparator from \"../../componets/ListItemSeparator\";\nimport { updatePreferred_username, updatePassword } from \"../../../apis/auth\";\nimport AppTextInput from \"../../componets/AppTextInput\";\nimport AppButton from \"../../componets/AppButton\";\nimport ProfileImageInput from \"../../componets/ProfileImageInput\";\nimport { s3CreateImage } from \"../../../apis/storage\";\nimport { updateUserImage } from \"../../../actions\";\n\nfunction EditProfile(_ref) {\n  var authUser = _ref.authUser,\n      userInfodispatch = _ref.userInfodispatch;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      preferred_username = _useState2[0],\n      setPreferred_username = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldPassword = _useState4[0],\n      setOldPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPassword = _useState6[0],\n      setNewPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      preferred_usernameClicked = _useState8[0],\n      setPreferred_usernameClicked = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordClicked = _useState10[0],\n      setPasswordClicked = _useState10[1];\n\n  var handleUploadPic = function handleUploadPic(image) {\n    var link;\n    return _regeneratorRuntime.async(function handleUploadPic$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(s3CreateImage(image, \"profile-pic\"));\n\n          case 2:\n            link = _context.sent;\n            dispatch(updateUserImage(link));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileSnip, {\n    title: authUser.username,\n    image: authUser.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileImageInput, {\n    onChangeImage: function onChangeImage(uri) {\n      return handleUploadPic(uri);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Account Details\"), React.createElement(ListItem, {\n    title: 'Username',\n    subTitle: authUser.username,\n    IconComponent: React.createElement(Icon, {\n      name: 'account',\n      backgroundColor: colors.primary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }),\n    onPress: function onPress() {\n      setPreferred_usernameClicked(function (prevPreferred_usernameClicked) {\n        return !prevPreferred_usernameClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), preferred_usernameClicked ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(AppTextInput, {\n    value: preferred_username,\n    onChangeText: function onChangeText(text) {\n      return setPreferred_username(text);\n    },\n    leftIcon: \"account\",\n    placeholder: \"Enter New Username\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Save Changes\",\n    onPress: function onPress() {\n      dispatch(updatePreferred_username(preferred_username));\n      setPreferred_usernameClicked(function (prevPreferred_usernameClicked) {\n        return !prevPreferred_usernameClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })) : null, React.createElement(ListItemSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem, {\n    title: 'Password',\n    subTitle: '***********',\n    IconComponent: React.createElement(Icon, {\n      name: 'key',\n      backgroundColor: colors.primary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }),\n    onPress: function onPress() {\n      setPasswordClicked(function (prevPasswordClicked) {\n        return !prevPasswordClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), passwordClicked ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(AppTextInput, {\n    value: oldPassword,\n    onChangeText: function onChangeText(text) {\n      return setOldPassword(text);\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter Exsisting Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), React.createElement(AppTextInput, {\n    value: newPassword,\n    onChangeText: function onChangeText(text) {\n      return setNewPassword(text);\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter New Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Save Changes\",\n    onPress: function onPress() {\n      updatePassword(oldPassword, newPassword);\n      setPasswordClicked(function (prevPasswordClicked) {\n        return !prevPasswordClicked;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })) : null));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    authUser: globalState.authUser\n  };\n}\n\nexport default connect(mapStateToProps)(EditProfile);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n    padding: 10\n  },\n  container: {\n    marginVertical: 20\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/account/EditProfile.js"],"names":["React","useState","connect","colors","Screen","ProfileSnip","ListItem","Icon","AppText","ListItemSeparator","updatePreferred_username","updatePassword","AppTextInput","AppButton","ProfileImageInput","s3CreateImage","updateUserImage","EditProfile","authUser","userInfodispatch","preferred_username","setPreferred_username","oldPassword","setOldPassword","newPassword","setNewPassword","preferred_usernameClicked","setPreferred_usernameClicked","passwordClicked","setPasswordClicked","handleUploadPic","image","link","dispatch","styles","screen","container","username","picture","uri","primary","prevPreferred_usernameClicked","text","prevPasswordClicked","mapStateToProps","globalState","StyleSheet","create","backgroundColor","white","padding","marginVertical","logo","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { StyleSheet, View } from \"react-native\"\nimport { connect } from \"react-redux\"\n\nimport colors from \"../../config/colors\"\nimport Screen from \"../../componets/Screen\"\nimport ProfileSnip from \"../../componets/ProfileSnip\"\nimport ListItem from \"../../componets/ListItem\"\nimport Icon from \"../../componets/Icon\"\nimport AppText from \"../../componets/AppText\"\nimport ListItemSeparator from \"../../componets/ListItemSeparator\"\nimport { updatePreferred_username, updatePassword } from \"../../../apis/auth\"\nimport AppTextInput from \"../../componets/AppTextInput\"\nimport AppButton from \"../../componets/AppButton\"\nimport ProfileImageInput from \"../../componets/ProfileImageInput\"\nimport { s3CreateImage } from \"../../../apis/storage\"\nimport { updateUserImage } from \"../../../actions\"\n\n\nfunction EditProfile({ authUser, userInfodispatch }) {\n\n  const [preferred_username, setPreferred_username] = useState('')\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [preferred_usernameClicked, setPreferred_usernameClicked] = useState(false)\n  const [passwordClicked, setPasswordClicked] = useState(false)\n\n  const handleUploadPic = async ( image ) => {\n      let link = await s3CreateImage( image, \"profile-pic\" )\n      dispatch( updateUserImage(link))\n  }\n\n\n\nreturn (\n  <Screen style={styles.screen}>\n    \n    <View style={styles.container}>\n        <ProfileSnip\n          title={authUser.username}\n          image={authUser.picture}\n        />\n    </View>\n\n    <View style={styles.container}>\n      <ProfileImageInput \n        onChangeImage={(uri) => handleUploadPic( uri )}\n        /> \n      \n      <AppText>Account Details</AppText>\n      \n      <ListItem\n        title={'Username'}\n        subTitle={authUser.username}\n        IconComponent={\n          <Icon\n            name={'account'}\n            backgroundColor={colors.primary}\n            />\n          }\n        onPress={() => {setPreferred_usernameClicked( prevPreferred_usernameClicked => !prevPreferred_usernameClicked )}}\n        />\n      \n      {preferred_usernameClicked ? (\n        <View>\n        <AppTextInput\n        value={preferred_username}\n        onChangeText={text => setPreferred_username(text)}\n        leftIcon=\"account\"\n        placeholder=\"Enter New Username\"\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        /> \n        <AppButton title=\"Save Changes\" onPress={() => {\n          dispatch( updatePreferred_username( preferred_username ))\n          setPreferred_usernameClicked( prevPreferred_usernameClicked => !prevPreferred_usernameClicked )}} />\n        </View>\n          ): null }\n\n      <ListItemSeparator/>\n\n      <ListItem\n        title={'Password'}\n        subTitle={'***********'}\n        IconComponent={\n          <Icon\n            name={'key'}\n            backgroundColor={colors.primary}\n            />\n          }\n        onPress={() => { setPasswordClicked( prevPasswordClicked => !prevPasswordClicked )}}\n          />\n      {passwordClicked ? (\n        <View>\n        <AppTextInput\n          value={oldPassword}\n          onChangeText={text => setOldPassword(text)}\n          leftIcon=\"lock\"\n          placeholder=\"Enter Exsisting Password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <AppTextInput\n          value={newPassword}\n          onChangeText={text => setNewPassword(text)}\n          leftIcon=\"lock\"\n          placeholder=\"Enter New Password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <AppButton title=\"Save Changes\" onPress={() => {\n          updatePassword( oldPassword, newPassword ) \n          setPasswordClicked( prevPasswordClicked => !prevPasswordClicked)}} />\n        </View>\n          ): null }\n      \n    </View>\n  </Screen>\n)\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    authUser:globalState.authUser\n  }\n}\n\nexport default connect(mapStateToProps)(EditProfile)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n    padding: 10\n  },\n  container: {\n    marginVertical: 20,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}