{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/profile/UserDetails.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport Amplify, { Storage } from 'aws-amplify';\nimport { v4 as uuidv4 } from 'uuid';\nimport colors from \"../../config/colors\";\nimport Screen from \"../../componets/Screen\";\nimport ImageInputList from \"../../componets/ImageInputList\";\n\nfunction UserDetails(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      picture = _useState2[0],\n      setPicture = _useState2[1];\n\n  var uploadToStorage = function uploadToStorage(pathToImageFile) {\n    var response, blob;\n    return _regeneratorRuntime.async(function uploadToStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(pathToImageFile));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 7:\n            blob = _context.sent;\n            Storage.put(uuidv4() + \".jpeg\", 'Protected Content', blob, {\n              level: 'protected',\n              contentType: 'image/jpeg'\n            });\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var handleAdd = function handleAdd(uri) {\n    uploadToStorage(uri);\n    console.log(uri);\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    options: \"{'level':'private'}\",\n    source: {\n      uri: user.picture\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    user: globalState.user\n  };\n}\n\nexport default connect(mapStateToProps)(UserDetails);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white\n  },\n  container: {\n    marginVertical: 20\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/profile/UserDetails.js"],"names":["React","connect","Amplify","Storage","v4","uuidv4","colors","Screen","ImageInputList","UserDetails","navigation","user","useState","picture","setPicture","uploadToStorage","pathToImageFile","fetch","response","console","log","blob","put","level","contentType","handleAdd","uri","styles","logo","mapStateToProps","globalState","StyleSheet","create","screen","backgroundColor","white","container","marginVertical","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,IAAkBC,OAAlB,QAAiC,aAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,cAAP;;AAIA,SAASC,WAAT,OAA2C;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBAEXC,QAAQ,CAAC,EAAD,CAFG;AAAA;AAAA,MAElCC,OAFkC;AAAA,MAEzBC,UAFyB;;AAIzC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAMC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEGC,KAAK,CAACD,eAAD,CAFR;;AAAA;AAEdE,YAAAA,QAFc;AAGpBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAHoB;AAAA,6CAIDA,QAAQ,CAACG,IAAT,EAJC;;AAAA;AAIdA,YAAAA,IAJc;AAMpBlB,YAAAA,OAAO,CAACmB,GAAR,CAAejB,MAAM,EAArB,YAAgC,mBAAhC,EAAqDgB,IAArD,EAA2D;AACzDE,cAAAA,KAAK,EAAE,WADkD;AAEzDC,cAAAA,WAAW,EAAE;AAF4C,aAA3D;AANoB;AAAA;;AAAA;AAAA;AAAA;AAWpBL,YAAAA,OAAO,CAACC,GAAR;;AAXoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AA4BF,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACzBX,IAAAA,eAAe,CAACW,GAAD,CAAf;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,GAHD;;AAYA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACA,IAAA,KAAK,EAAEC,MAAM,CAACC,IADd;AAEA,IAAA,OAAO,EAAC,qBAFR;AAGA,IAAA,MAAM,EAAE;AACNF,MAAAA,GAAG,EAACf,IAAI,CAACE;AADH,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiBC;;AAED,SAASgB,eAAT,CAA0BC,WAA1B,EAAuC;AACrC,SAAO;AACLnB,IAAAA,IAAI,EAACmB,WAAW,CAACnB;AADZ,GAAP;AAGD;;AAED,eAAeV,OAAO,CAAC4B,eAAD,CAAP,CAAyBpB,WAAzB,CAAf;AAEA,IAAMkB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE5B,MAAM,CAAC6B;AADlB,GADuB;AAI/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE;AADP,GAJoB;AAO/BT,EAAAA,IAAI,EAAE;AACJU,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPyB,CAAlB,CAAf","sourcesContent":["import React from \"react\"\nimport { StyleSheet, Image } from \"react-native\"\nimport { connect } from \"react-redux\"\nimport Amplify, { Storage } from 'aws-amplify'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport colors from \"../../config/colors\"\nimport Screen from \"../../componets/Screen\"\nimport ImageInputList from \"../../componets/ImageInputList\"\n\n\n\nfunction UserDetails({ navigation, user }) {\n\n  const [picture, setPicture] = useState('')\n\n  const uploadToStorage = async pathToImageFile => {\n    try {\n      const response = await fetch(pathToImageFile)\n      console.log(response)\n      const blob = await response.blob()\n      \n      Storage.put(`${uuidv4()}.jpeg`, 'Protected Content', blob, {\n        level: 'protected',\n        contentType: 'image/jpeg',\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n\n//  async function userPic() {\n//   try {\n//     const userProfileUrl = await Storage.get('default-picture.png')\n//     console.log(userProfileUrl)\n//     return userProfileUrl\n//   } catch (error) {\n//     console.error('error accessing the user image',err)\n//   }\n//  }\n  \n  \n\nconst handleAdd = (uri) => {\n  uploadToStorage(uri)\n  console.log(uri)\n}\n\n// const handleRemove = (uri) => {\n//   setFieldValue(\n//     name,\n//     imageUris.filter((imageUri) => imageUri !== uri)\n//   )\n// }\n\nreturn (\n  <Screen>\n    <Image\n    style={styles.logo}\n    options=\"{'level':'private'}\"\n    source={{\n      uri:user.picture\n    }}\n    />  \n  {/* <ImageInputList\n      imageUris={[user.picture]}\n      onAddImage={handleAdd}\n      // onRemoveImage={handleRemove}\n    /> */}\n    {/* <ErrorMessage error={errors[name]} visible={touched[name]} /> */}\n  </Screen>\n)\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    user:globalState.user\n  }\n}\n\nexport default connect(mapStateToProps)(UserDetails)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n  },\n  container: {\n    marginVertical: 20,\n  },\n  logo: {\n    width: 66,\n    height: 58,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}