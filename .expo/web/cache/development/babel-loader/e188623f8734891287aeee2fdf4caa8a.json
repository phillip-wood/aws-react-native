{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _Dimensions = require(\"../Dimensions\");\n\nvar _Dimensions2 = _interopRequireDefault(_Dimensions);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  _createClass(PixelRatio, null, [{\n    key: 'get',\n    value: function get() {\n      return _Dimensions2.default.get('window').scale;\n    }\n  }, {\n    key: 'getFontScale',\n    value: function getFontScale() {\n      return _Dimensions2.default.get('window').fontScale || PixelRatio.get();\n    }\n  }, {\n    key: 'getPixelSizeForLayoutSize',\n    value: function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n  }, {\n    key: 'roundToNearestPixel',\n    value: function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n\n  return PixelRatio;\n}();\n\nmodule.exports = PixelRatio;","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/node_modules/react-native-web/dist/apis/PixelRatio/index.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_Dimensions","require","_Dimensions2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","PixelRatio","value","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })(); /**\nopyright (c) 2015-present, Nicolas Gallagher.\nopyright (c) 2015-present, Facebook, Inc.\nll rights reserved.\nnnn\nvar _Dimensions = require('../Dimensions');\n\nvar _Dimensions2 = _interopRequireDefault(_Dimensions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio = (function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  _createClass(PixelRatio, null, [{\n    key: 'get',\n\n    /**\n     * Returns the device pixel density.\n     */\n    value: function get() {\n      return _Dimensions2.default.get('window').scale;\n    }\n\n    /**\n     * No equivalent for Web\n     */\n\n  }, {\n    key: 'getFontScale',\n    value: function getFontScale() {\n      return _Dimensions2.default.get('window').fontScale || PixelRatio.get();\n    }\n\n    /**\n     * Converts a layout size (dp) to pixel size (px).\n     * Guaranteed to return an integer number.\n     */\n\n  }, {\n    key: 'getPixelSizeForLayoutSize',\n    value: function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n\n    /**\n     * Rounds a layout size (dp) to the nearest layout size that corresponds to\n     * an integer number of pixels. For example, on a device with a PixelRatio\n     * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n     * exactly (8.33 * 3) = 25 pixels.\n     */\n\n  }, {\n    key: 'roundToNearestPixel',\n    value: function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n\n  return PixelRatio;\n})();\n\nmodule.exports = PixelRatio;"]},"metadata":{},"sourceType":"script"}