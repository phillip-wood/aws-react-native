{"ast":null,"code":"'use strict';\n\nvar mapTransform = function mapTransform(transform) {\n  var key = Object.keys(transform)[0];\n  return key + '(' + transform[key] + ')';\n};\n\nvar convertTransformMatrix = function convertTransformMatrix(transformMatrix) {\n  var matrix = transformMatrix.join(',');\n  return 'matrix3d(' + matrix + ')';\n};\n\nvar processTransform = function processTransform(style) {\n  if (style) {\n    if (style.transform) {\n      style.transform = style.transform.map(mapTransform).join(' ');\n    } else if (style.transformMatrix) {\n      style.transform = convertTransformMatrix(style.transformMatrix);\n      delete style.transformMatrix;\n    }\n  }\n\n  return style;\n};\n\nmodule.exports = processTransform;","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/node_modules/react-native-web/dist/apis/StyleSheet/processTransform.js"],"names":["mapTransform","transform","key","Object","keys","convertTransformMatrix","transformMatrix","matrix","join","processTransform","style","map","module","exports"],"mappings":"AAAA;;AAGA,IAAIA,YAAY,GAAG,SAASA,YAAT,CAAsBC,SAAtB,EAAiC;AAClD,MAAIC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAV;AACA,SAAOC,GAAG,GAAG,GAAN,GAAYD,SAAS,CAACC,GAAD,CAArB,GAA6B,GAApC;AACD,CAHD;;AAMA,IAAIG,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,eAAhC,EAAiD;AAC5E,MAAIC,MAAM,GAAGD,eAAe,CAACE,IAAhB,CAAqB,GAArB,CAAb;AACA,SAAO,cAAcD,MAAd,GAAuB,GAA9B;AACD,CAHD;;AAKA,IAAIE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtD,MAAIA,KAAJ,EAAW;AACT,QAAIA,KAAK,CAACT,SAAV,EAAqB;AACnBS,MAAAA,KAAK,CAACT,SAAN,GAAkBS,KAAK,CAACT,SAAN,CAAgBU,GAAhB,CAAoBX,YAApB,EAAkCQ,IAAlC,CAAuC,GAAvC,CAAlB;AACD,KAFD,MAEO,IAAIE,KAAK,CAACJ,eAAV,EAA2B;AAChCI,MAAAA,KAAK,CAACT,SAAN,GAAkBI,sBAAsB,CAACK,KAAK,CAACJ,eAAP,CAAxC;AACA,aAAOI,KAAK,CAACJ,eAAb;AACD;AACF;;AACD,SAAOI,KAAP;AACD,CAVD;;AAYAE,MAAM,CAACC,OAAP,GAAiBJ,gBAAjB","sourcesContent":["'use strict';\n\n// { scale: 2 } => 'scale(2)'\nvar mapTransform = function mapTransform(transform) {\n  var key = Object.keys(transform)[0];\n  return key + '(' + transform[key] + ')';\n};\n\n// [1,2,3,4,5,6] => 'matrix3d(1,2,3,4,5,6)'\nvar convertTransformMatrix = function convertTransformMatrix(transformMatrix) {\n  var matrix = transformMatrix.join(',');\n  return 'matrix3d(' + matrix + ')';\n};\n\nvar processTransform = function processTransform(style) {\n  if (style) {\n    if (style.transform) {\n      style.transform = style.transform.map(mapTransform).join(' ');\n    } else if (style.transformMatrix) {\n      style.transform = convertTransformMatrix(style.transformMatrix);\n      delete style.transformMatrix;\n    }\n  }\n  return style;\n};\n\nmodule.exports = processTransform;"]},"metadata":{},"sourceType":"script"}