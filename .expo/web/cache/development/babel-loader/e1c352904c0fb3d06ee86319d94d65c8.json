{"ast":null,"code":"import { API } from 'aws-amplify';\nimport { Auth } from 'aws-amplify';\nimport * as queries from \"../src/graphql/queries\";\nexport var SET_SNEAKERS = 'SET_SNEAKERS';\nexport var SET_SEARCH = 'SET_SEARCH';\nexport var SET_USER = 'SET_USER';\nexport var SET_USER_SENAKERS = 'SET_USER_SNEAKERS';\nexport var UPDATE_USER = 'UPDATE_USER';\nexport function setSneakers(sneakers) {\n  return {\n    type: SET_SNEAKERS,\n    sneakers: sneakers\n  };\n}\nexport function setSearch(search) {\n  return {\n    type: SET_SEARCH,\n    search: search\n  };\n}\nexport function setUser(user) {\n  return {\n    type: SET_USER,\n    user: user\n  };\n}\nexport function setUserSneakers(userSneakers) {\n  return {\n    type: SET_USER_SENAKERS,\n    userSneakers: userSneakers\n  };\n}\nexport function updateUser(update) {\n  return {\n    type: UPDATE_USER,\n    update: update\n  };\n}\nexport function fetchSneakers() {\n  return function (dispatch) {\n    return API.graphql({\n      query: queries.listSneakers\n    }).then(function (sneakers) {\n      dispatch(setSneakers(sneakers.data.listSneakers.items));\n      return null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}\nexport function fetchUserSneakers(userId) {\n  var filter = {\n    user_id: {\n      eq: userId\n    }\n  };\n  return function (dispatch) {\n    return API.graphql({\n      query: queries.listUserSneakers\n    }).then(function (userSneakers) {\n      console.log(userSneakers);\n      return null;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/actions/index.js"],"names":["API","Auth","queries","SET_SNEAKERS","SET_SEARCH","SET_USER","SET_USER_SENAKERS","UPDATE_USER","setSneakers","sneakers","type","setSearch","search","setUser","user","setUserSneakers","userSneakers","updateUser","update","fetchSneakers","dispatch","graphql","query","listSneakers","then","data","items","catch","err","console","log","fetchUserSneakers","userId","filter","user_id","eq","listUserSneakers"],"mappings":"AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,OAAO,KAAKC,OAAZ;AAEA,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAEP,YADD;AAELM,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,SAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEN,UADD;AAELQ,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,OAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAEL,QADD;AAELS,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,eAAT,CAA0BC,YAA1B,EAAwC;AAC7C,SAAO;AACLN,IAAAA,IAAI,EAAEJ,iBADD;AAELU,IAAAA,YAAY,EAAZA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,UAAT,CAAqBC,MAArB,EAA6B;AAClC,SAAO;AACLR,IAAAA,IAAI,EAAEH,WADD;AAELW,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;AAkBD,OAAO,SAASC,aAAT,GAA0B;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOpB,GAAG,CAACqB,OAAJ,CAAY;AAAEC,MAAAA,KAAK,EAAEpB,OAAO,CAACqB;AAAjB,KAAZ,EACJC,IADI,CACC,UAAAf,QAAQ,EAAI;AAChBW,MAAAA,QAAQ,CAAEZ,WAAW,CAAEC,QAAQ,CAACgB,IAAT,CAAcF,YAAd,CAA2BG,KAA7B,CAAb,CAAR;AACE,aAAO,IAAP;AACH,KAJI,EAKJC,KALI,CAKG,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KALN,CAAP;AAMD,GAPD;AAQD;AAED,OAAO,SAASG,iBAAT,CAA4BC,MAA5B,EAAoC;AACzC,MAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAACH;AAAL;AAAX,GAAf;AACA,SAAO,UAAAZ,QAAQ,EAAI;AACjB,WAAOpB,GAAG,CAACqB,OAAJ,CAAY;AAAEC,MAAAA,KAAK,EAAEpB,OAAO,CAACkC;AAAjB,KAAZ,EACJZ,IADI,CACC,UAAAR,YAAY,EAAI;AAAEa,MAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACpB,aAAO,IAAP;AACH,KAHI,EAIJW,KAJI,CAIG,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAJN,CAAP;AAKD,GAND;AAOD","sourcesContent":["import { API } from 'aws-amplify'\nimport { Auth } from 'aws-amplify'\n\nimport * as queries from '../src/graphql/queries'\n\nexport const SET_SNEAKERS = 'SET_SNEAKERS'\nexport const SET_SEARCH = 'SET_SEARCH'\nexport const SET_USER = 'SET_USER'\nexport const SET_USER_SENAKERS = 'SET_USER_SNEAKERS'\nexport const UPDATE_USER = 'UPDATE_USER'\n\nexport function setSneakers (sneakers) {\n  return {\n    type: SET_SNEAKERS,\n    sneakers\n  }\n}\n\nexport function setSearch (search) {\n  return {\n    type: SET_SEARCH,\n    search\n  }\n}\n\nexport function setUser (user) {\n  return {\n    type: SET_USER,\n    user\n  }\n}\n\nexport function setUserSneakers (userSneakers) {\n  return {\n    type: SET_USER_SENAKERS,\n    userSneakers\n  }\n}\n\nexport function updateUser (update) {\n  return {\n    type: UPDATE_USER,\n    update\n  }\n}\n\n// export function fetchAuthUser () {\n//   return dispatch => {\n//     return Auth.currentAuthenticatedUser({ bypassCache: false })\n//       .then(user => {\n//         dispatch( setUser({\n//           id:user.attributes.sub, \n//           email: user.attributes.email, \n//           username: user.attributes.preferred_username, \n//           picture: user.attributes.picture\n//         }))\n//           return null\n//     })\n//     .catch( err => console.log(err))\n//   }\n// }\n\nexport function fetchSneakers () {\n  return dispatch => {\n    return API.graphql({ query: queries.listSneakers })\n      .then(sneakers => {\n        dispatch( setSneakers( sneakers.data.listSneakers.items ))\n          return null\n      })\n      .catch( err => console.log(err))\n  }\n}\n\nexport function fetchUserSneakers (userId) {\n  const filter = { user_id: { eq:userId }}\n  return dispatch => {\n    return API.graphql({ query: queries.listUserSneakers })\n      .then(userSneakers => { console.log(userSneakers)\n          return null\n      })\n      .catch( err => console.log(err))\n  }\n}\n\n// dispatch( setUserSneakers(userSneakers.data.listUserSneakers.items ))\n// , variables: { filter:filter }"]},"metadata":{},"sourceType":"module"}