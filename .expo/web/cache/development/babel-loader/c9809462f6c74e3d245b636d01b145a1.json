{"ast":null,"code":"var _jsxFileName = \"/home/phil/Workspace/aws-react-native/app/screens/account/Profile.js\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { connect } from \"react-redux\";\nimport ListItemSeparator from \"../../componets/ListItemSeparator\";\nimport colors from \"../../config/colors\";\nimport Icon from \"../../componets/Icon\";\nimport Screen from \"../../componets/Screen\";\nimport ProfileSnip from \"../../componets/ProfileSnip\";\nimport ListItem from \"../../componets/ListItem\";\nimport { dbReadUserMessages } from \"../../../apis/database\";\nvar menuItems = [{\n  title: \"My Collection\",\n  icon: {\n    name: \"format-list-bulleted\",\n    backgroundColor: colors.primary\n  },\n  targetScreen: 'Home'\n}, {\n  title: \"My Messages\",\n  icon: {\n    name: \"message\",\n    backgroundColor: colors.primary\n  },\n  targetScreen: 'Messages'\n}, {\n  title: \"My Details\",\n  icon: {\n    name: \"account\",\n    backgroundColor: colors.primary\n  },\n  targetScreen: 'EditProfile'\n}, {\n  title: \"Log Out\",\n  icon: {\n    name: \"logout\",\n    backgroundColor: colors.primary\n  },\n  targetScreen: 'Logout'\n}];\n\nfunction Profile(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      authUser = _ref.authUser,\n      userInfo = _ref.userInfo,\n      dispatch = _ref.dispatch;\n  useEffect(function () {\n    if (authUser.id) {\n      dispatch(dbReadUserMessages(authUser.id));\n    }\n  }, [authUser]);\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(ProfileSnip, {\n    title: authUser.username,\n    image: userInfo.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: menuItems,\n    keyExtractor: function keyExtractor(menuItem) {\n      return menuItem.title;\n    },\n    ItemSeparatorComponent: ListItemSeparator,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        IconComponent: React.createElement(Icon, {\n          name: item.icon.name,\n          backgroundColor: item.icon.backgroundColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }),\n        onPress: function onPress() {\n          navigation.navigate(item.targetScreen);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction mapStateToProps(globalState) {\n  return {\n    authUser: globalState.authUser,\n    userInfo: globalState.userInfo\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n    padding: 10\n  },\n  container: {\n    marginVertical: 20\n  }\n});","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/app/screens/account/Profile.js"],"names":["React","useEffect","connect","ListItemSeparator","colors","Icon","Screen","ProfileSnip","ListItem","dbReadUserMessages","menuItems","title","icon","name","backgroundColor","primary","targetScreen","Profile","navigation","authUser","userInfo","dispatch","id","styles","screen","container","username","image","menuItem","item","navigate","mapStateToProps","globalState","StyleSheet","create","white","padding","marginVertical"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { StyleSheet, View, FlatList } from \"react-native\"\nimport { connect } from \"react-redux\"\n\nimport ListItemSeparator from \"../../componets/ListItemSeparator\"\nimport colors from \"../../config/colors\"\nimport Icon from \"../../componets/Icon\"\nimport Screen from \"../../componets/Screen\"\nimport ProfileSnip from '../../componets/ProfileSnip'\nimport ListItem from \"../../componets/ListItem\"\nimport { dbReadUserMessages } from \"../../../apis/database\"\n\nconst menuItems = [\n  {\n    title: \"My Collection\",\n    icon: {\n      name: \"format-list-bulleted\",\n      backgroundColor: colors.primary,\n    },\n    targetScreen: 'Home',\n  },\n  {\n    title: \"My Messages\",\n    icon: {\n      name: \"message\",\n      backgroundColor: colors.primary,\n    },\n    targetScreen: 'Messages',\n  },\n  {\n    title: \"My Details\",\n    icon: {\n      name: \"account\",\n      backgroundColor: colors.primary,\n    },\n    targetScreen: 'EditProfile',\n  },\n  {\n    title: \"Log Out\",\n    icon: {\n      name: \"logout\",\n      backgroundColor: colors.primary,\n    },\n    targetScreen: 'Logout',\n  },\n]\n\nfunction Profile({ navigation, authUser, userInfo, dispatch }) {\n\n  useEffect(() => {\n    if ( authUser.id ) {\n      dispatch( dbReadUserMessages( authUser.id )) \n    }\n  }, [ authUser ])\n  \n  return (\n    <Screen style={styles.screen}>\n      <View style={styles.container}>\n        <ProfileSnip\n          title={authUser.username}\n          image={userInfo.image}\n        />\n      </View>\n      <View style={styles.container}>\n        <FlatList\n          data={menuItems}\n          keyExtractor={(menuItem) => menuItem.title}\n          ItemSeparatorComponent={ListItemSeparator}\n          renderItem={({ item }) => (\n            <ListItem\n              title={item.title}\n              IconComponent={\n                <Icon\n                  name={item.icon.name}\n                  backgroundColor={item.icon.backgroundColor}\n                />\n              }\n              onPress={() => {navigation.navigate(item.targetScreen)}}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  )\n}\n\nfunction mapStateToProps (globalState) {\n  return {\n    authUser:globalState.authUser,\n    userInfo:globalState.userInfo\n  }\n}\n\nexport default connect(mapStateToProps)(Profile)\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.white,\n    padding: 10,\n  },\n  container: {\n    marginVertical: 20,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}