{"ast":null,"code":"import { API, graphqlOperation } from \"aws-amplify\";\nimport { setUserConversations } from \"../../actions/index\";\nimport * as queries from \"../../src/graphql/queries\";","map":{"version":3,"sources":["/home/phil/Workspace/aws-react-native/apis/database/conversation.js"],"names":["API","graphqlOperation","setUserConversations","queries"],"mappings":"AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AAEA,SAASC,oBAAT;AACA,OAAO,KAAKC,OAAZ","sourcesContent":["import { API, graphqlOperation } from \"aws-amplify\"\n\nimport { setUserConversations } from '../../actions/index'\nimport * as queries from \"../../src/graphql/queries\"\n\n//-----CREATE-----//\n// export function dbCreateConversation( subject, user_ids ) {\n//     const conversationDetails = {\n//         subject: subject,\n//         user_ids: user_ids,\n//         Messages: []\n//     }\n \n//     return API\n//         .graphql( graphqlOperation( mutations.dbCreateConversation, { input: conversationDetails }))\n//         .then( result => console.log( result ))\n//         .catch( error => console.log('❌ Error Adding Conversation ', error ))  \n// }\n\n//-----READ-----//\n// export function dbReadUserConversations ( user_id ) {\n//     const filter = {user_ids: {contains: user_id}}\n//     return dispatch => {\n//         return API\n//             .graphql( { query: queries.listConversations, variables: { filter: filter }},  )\n//             .then( conversations => {\n//                 dispatch( setUserConversations( conversations.data.listConversations.items ))\n//                 return null\n//             })\n//             .catch( err => console.log( err ))\n//     }\n// }\n\n//-----UPDATE-----//\n// export function dbUpdateConversation ( Messages ) {\n//     const conversationDetails = {\n//         Messages: Messages\n//     }\n\n//     return dispatch => {\n//         return API\n//             .graphql( graphqlOperation( mutations.updateConversation, { input: conversationDetails }))\n//             .then( conversation => {\n//                 console.log( conversation )\n//                 return null\n//             })\n//             .catch( err => console.log( err ))\n//     }\n// }\n\n//-----DELETE-----//"]},"metadata":{},"sourceType":"module"}