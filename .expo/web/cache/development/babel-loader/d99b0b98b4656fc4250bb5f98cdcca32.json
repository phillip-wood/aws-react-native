{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import { API, graphqlOperation } from \"aws-amplify\"\n\n// import { setUserInfo, updateUserInfoImage } from '../../actions/index'\n// import * as mutations from '../../src/graphql/mutations'\n// import * as queries from \"../../src/graphql/queries\"\n\n//-----CREATE-----//\n// export function dbCreateUserInfo( user_id, image ) {\n//     const userInfoDetails = {\n//         user_id: user_id,\n//         image: image,\n//         conversation_ids: []\n//     }\n \n//     return API\n//         .graphql( graphqlOperation( mutations.createUserInfo, { input: userInfoDetails }))\n//         .then( result => console.log( result ))\n//         .catch( error => console.log('❌ Error Adding User Info ', error ))  \n// }\n\n//-----READ-----//\n// export function dbReadUserInfo ( user_id ) {\n//     const filter = { user_id: { eq:user_id }}\n//     return dispatch => {\n//         return API\n//             .graphql( { query: queries.listUserInfos, variables: { filter: filter }})\n//             .then( userInfo => {\n//                 dispatch( setUserInfo( userInfo.data.listUserInfos.items[0] ))\n//                 return null\n//             })\n//             .catch( err => console.log( err ))\n//     }\n// }\n\n//-----UPDATE-----//\n// export function dbUpdateUserInfo ( link, userInfo ) {\n//     const newUserInfo = {\n//         id: userInfo.id,\n//         image: link,\n//         _version: userInfo._version\n//     }\n\n//     return dispatch => {\n//         return API\n//             .graphql( graphqlOperation( mutations.updateUserInfo, { input: newUserInfo }))\n//             .then( userInfo => {\n//                 dispatch( updateUserInfoImage( userInfo.data.updateUserInfo.image ))\n//                 return null\n//             })\n//             .catch( err => console.log( err ))\n//     }\n// }\n\n//-----DELETE-----//"]},"metadata":{},"sourceType":"script"}